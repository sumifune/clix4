{"version":3,"sources":["http-common.js","services/patient.service.js","components/add-patient.component.js","components/patient.component.js","services/appointment.service.js","components/patients-list.component.js","components/appointment-case.component.js","components/appointments-list.component.js","components/add-appointment.component.js","components/search.component.js","components/appointments-list-by-patient.component.js","services/invoice.service.js","components/invoices-list.component.js","services/service.service.js","components/add-invoice.component.js","components/search-modal-invoices.component.js","components/invoices-list-by-patient.component.js","components/observations-list-by-patient.component.js","components/add-observation.component.js","components/services-list.component.js","components/add-service.component.js","components/service.component.js","App.js","serviceWorker.js","fontawesome.js","index.js"],"names":["axios","create","baseURL","headers","params","http","get","id","data","post","put","delete","surname","observation","AddPatient","props","onChangeName","bind","onChangeSurname","onChangeAddress","onChangeCity","onChangeDni","onChangePhone","onChangeEmail","onChangeDescription","savePatient","newPatient","state","name","address","city","dni","phone","email","description","active","submitted","e","this","setState","target","value","PatientDataService","then","response","catch","console","log","className","style","marginTop","autoComplete","onClick","htmlFor","type","required","onChange","marginBottom","Component","Patient","getPatient","updateActive","updatePatient","deletePatient","currentPatient","message","match","prevState","status","update","history","push","date","PatientsList","handleKeyPress","event","key","retrievePatients","onChangeSearchSurname","handlePageChange","handlePageSizeChange","toggleMenu","addAppointment","makeAppointment","patients","searchSurname","page","count","pageSize","pageSizes","getRequestParams","getAll","totalPages","patient","getAttribute","expanded","res","split","hour_date_selectedDate","madeBy","hour","service","estate","AppointmentDataService","placeholder","onKeyPress","map","index","paddingLeft","data-toggle","data-target","aria-expanded","aria-controls","inx","Dropdown","as","ButtonGroup","Button","variant","patientid","serviceid","minDeviceWidth","matches","Toggle","Menu","Item","href","Divider","aria-labelledby","data-parent","to","size","Pagination","siblingCount","boundaryCount","shape","AppointmentCase","useState","show","setShow","handleClose","isMobile","useMediaQuery","query","appointment","backgroundColor","height","display","justifyContent","alignItems","borderRadius","calcStyle","substring","Modal","onHide","Header","closeButton","Title","Body","moment","createdAt","fromNow","Footer","aid","arrindx","indexdate","cancelAppointment","fulfillAppointment","locale","AddAppointment","deleteAppointment","i","appointments","filter","item","j","redirectPatients","day","selectedDate","add","format","handleDateChange","retrieveAppointments","previousDates","followingDates","apointee","selected","prevProps","findByDateNext","nextFiveDates","concat","arrIndx","timeSlotConainer","border","minHeight","hourHeader","timeSlot","width","aaaa","libInstance","utils","MomentUtils","margin","label","cancelLabel","okLabel","KeyboardButtonProps","paddingTop","Array","from","length","toString","appointmentDates","indexDate","stopPropagation","setService","findByDate","appointmentAcu","appointmentPsico","minDate","InputGroup","DropdownButton","Prepend","title","FormControl","aria-describedby","readOnly","marginLeft","Toast","onClose","src","alt","SearchModal","date1","setDate1","date2","setDate2","setFilter","doFilter","handleShow","Container","Row","Col","xs","md","handleState","handleCloseModal","handleShowModal","findByPatientId","Card","Subtitle","Text","Link","InvoicesList","retrieveInvoices","cancelInvoice","payInvoice","sayHi","invoices","startOf","InvoiceDataService","invoice","inumber","charAt","toUpperCase","slice","background","paddingRight","concept","base","iva","total","emittedTo","_id","AddVoice","onChangeConcept","onChangeSessions","saveInvoice","newInvoice","sessions","services","retrieveServices","ServiceDataService","options","selectedIndex","counter","Form","Group","controlId","Label","Control","defaultValue","InvoicesListByPatient","ObservationsList","retrieveObservations","deleteObservation","sortObs","sortObsInv","observations","findObservations","sortedArray","sort","a","b","Date","observationID","newArray","o","DropdownType","idx","eventKey","note","onChangeNote","addObservation","success","rows","ServicesList","cost","AddService","onChangeIVA","createService","newService","onChangeCost","updateService","getService","App","Navbar","bg","Brand","Collapse","Nav","NavDropdown","alignRight","exact","path","component","AddObservation","AppointmentsList","AppointmentsListByPatient","AddInvoice","Service","Boolean","window","location","hostname","library","faCoffee","faCalendarTimes","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.46fc1b97.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  // baseURL: \"http://192.168.99.100/api\",\r\n  // baseURL: \"http://128.199.52.198/api\",\r\n  baseURL: \"http://localhost:3000/api\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n  },\r\n});\r\n","import http from \"../http-common\";\r\n\r\nclass PatientDataService {\r\n  getAll(params) {\r\n    return http.get(\"/patients\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/patients/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/patients\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/patients/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/patients/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/patients`);\r\n  }\r\n\r\n  findBySurname(surname) {\r\n    return http.get(`/patients?surname=${surname}`);\r\n  }\r\n\r\n  findObservations(id) {\r\n    return http.get(`/patients/${id}/obs`);\r\n  }\r\n\r\n  deleteObservation(id, observation) {\r\n    return http.delete(`/patients/${id}/obs?observation=${observation}`);\r\n  }\r\n\r\n  addObservation(id, data) {\r\n    return http.put(`/patients/${id}/addob`, data);\r\n  }\r\n}\r\n\r\nexport default new PatientDataService();\r\n","import React, { Component } from \"react\";\r\nimport PatientDataService from \"../services/patient.service\";\r\n\r\nexport default class AddPatient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeSurname = this.onChangeSurname.bind(this);\r\n    this.onChangeAddress = this.onChangeAddress.bind(this);\r\n    this.onChangeCity = this.onChangeCity.bind(this);\r\n    this.onChangeDni = this.onChangeDni.bind(this);\r\n    this.onChangePhone = this.onChangePhone.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.savePatient = this.savePatient.bind(this);\r\n    this.newPatient = this.newPatient.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      name: \"\",\r\n      surname: \"\",\r\n      address: \"\",\r\n      city: \"\",\r\n      dni: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      description: \"\",\r\n      active: false,\r\n\r\n      submitted: false,\r\n    };\r\n  }\r\n\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  }\r\n  onChangeSurname(e) {\r\n    this.setState({\r\n      surname: e.target.value,\r\n    });\r\n  }\r\n  onChangeAddress(e) {\r\n    this.setState({\r\n      address: e.target.value,\r\n    });\r\n  }\r\n  onChangeCity(e) {\r\n    this.setState({\r\n      city: e.target.value,\r\n    });\r\n  }\r\n  onChangeDni(e) {\r\n    this.setState({\r\n      dni: e.target.value,\r\n    });\r\n  }\r\n  onChangePhone(e) {\r\n    this.setState({\r\n      phone: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value,\r\n    });\r\n  }\r\n\r\n  savePatient() {\r\n    var data = {\r\n      name: this.state.name,\r\n      surname: this.state.surname,\r\n      address: this.state.address,\r\n      city: this.state.city,\r\n      dni: this.state.dni,\r\n      phone: this.state.phone,\r\n      email: this.state.email,\r\n      description: this.state.description,\r\n    };\r\n\r\n    PatientDataService.create(data)\r\n      .then((response) => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          surname: response.data.surname,\r\n          address: response.data.address,\r\n          city: response.data.city,\r\n          dni: response.data.dni,\r\n          phone: response.data.phone,\r\n          email: response.data.email,\r\n          description: response.data.description,\r\n          active: response.data.active,\r\n\r\n          submitted: true,\r\n        });\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newPatient() {\r\n    this.setState({\r\n      id: null,\r\n      name: \"\",\r\n      surname: \"\",\r\n      address: \"\",\r\n      city: \"\",\r\n      dni: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      description: \"\",\r\n      active: false,\r\n\r\n      submitted: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n      <div className=\"col-12\" style={{ marginTop: '10px'}}>\r\n      <form autoComplete=\"off\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>Añadido correctamente!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newPatient}>\r\n              Nuevo\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">Nombre</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.onChangeName}\r\n                name=\"name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"surname\">Apellidos</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"surname\"\r\n                required\r\n                value={this.state.surname}\r\n                onChange={this.onChangeSurname}\r\n                name=\"surname\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"address\">Dirección</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"address\"\r\n                required\r\n                value={this.state.address}\r\n                onChange={this.onChangeAddress}\r\n                name=\"address\"\r\n                autoComplete=\"nope\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"city\">Ciudad</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"city\"\r\n                required\r\n                value={this.state.city}\r\n                onChange={this.onChangeCity}\r\n                name=\"city\"\r\n                autoComplete=\"nope\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"dni\">DNI</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"dni\"\r\n                required\r\n                value={this.state.dni}\r\n                onChange={this.onChangeDni}\r\n                name=\"dni\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"phone\">Teléfono</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"phone\"\r\n                required\r\n                value={this.state.phone}\r\n                onChange={this.onChangePhone}\r\n                name=\"phone\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"email\"\r\n                required\r\n                value={this.state.email}\r\n                onChange={this.onChangeEmail}\r\n                name=\"email\"\r\n                autoComplete=\"nope\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Descripción</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                required\r\n                value={this.state.description}\r\n                onChange={this.onChangeDescription}\r\n                name=\"description\"\r\n              />\r\n            </div>\r\n\r\n            <button style={{marginBottom: \"25px\"}} onClick={this.savePatient} className=\"btn btn-secondary\">\r\n              Añadir\r\n            </button>\r\n          </div>\r\n        )}\r\n      </form>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PatientDataService from \"../services/patient.service\";\r\nimport './patient.component.css';\r\n\r\nexport default class Patient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeSurname = this.onChangeSurname.bind(this);\r\n    this.onChangeAddress = this.onChangeAddress.bind(this);\r\n    this.onChangeCity = this.onChangeCity.bind(this);\r\n    this.onChangeDni = this.onChangeDni.bind(this);\r\n    this.onChangePhone = this.onChangePhone.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n\r\n    this.getPatient = this.getPatient.bind(this);\r\n    this.updateActive = this.updateActive.bind(this);\r\n    this.updatePatient = this.updatePatient.bind(this);\r\n    this.deletePatient = this.deletePatient.bind(this);\r\n\r\n    this.state = {\r\n      currentPatient: {\r\n        id: null,\r\n        name: \"\",\r\n        surname: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        dni: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n        description: \"\",\r\n        active: false,\r\n\r\n        submitted: false,\r\n      },\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPatient(this.props.match.params.id);\r\n  }\r\n\r\n  onChangeName(e) {\r\n    const name = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          name: name,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeSurname(e) {\r\n    const surname = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          surname: surname,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeAddress(e) {\r\n    const address = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          address: address,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeCity(e) {\r\n    const city = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          city: city,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeDni(e) {\r\n    const dni = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          dni: dni,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangePhone(e) {\r\n    const phone = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          phone: phone,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    const email = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          email: email,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    const description = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentPatient: {\r\n        ...prevState.currentPatient,\r\n        description: description,\r\n      },\r\n    }));\r\n  }\r\n\r\n  getPatient(id) {\r\n    PatientDataService.get(id)\r\n      .then((response) => {\r\n        this.setState({\r\n          currentPatient: response.data,\r\n        });\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateActive(status) {\r\n    var data = {\r\n      id: this.state.currentPatient.id,\r\n      name: this.state.currentPatient.name,\r\n      surname: this.state.currentPatient.surname,\r\n      address: this.state.currentPatient.address,\r\n      city: this.state.currentPatient.city,\r\n      dni: this.state.currentPatient.dni,\r\n      phone: this.state.currentPatient.phone,\r\n      email: this.state.currentPatient.email,\r\n      description: this.state.currentPatient.description,\r\n      active: status,\r\n    };\r\n\r\n    PatientDataService.update(this.state.currentPatient.id, data)\r\n      .then((response) => {\r\n        this.setState((prevState) => ({\r\n          currentPatient: {\r\n            ...prevState.currentPatient,\r\n            active: status,\r\n          },\r\n        }));\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updatePatient() {\r\n    PatientDataService.update(\r\n      this.state.currentPatient.id,\r\n      this.state.currentPatient\r\n    )\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        this.setState({\r\n          message: \"Paciente actualizado correctamente!\",\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deletePatient() {\r\n    PatientDataService.delete(this.state.currentPatient.id)\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        this.props.history.push(\"/patients\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentPatient } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentPatient ? (\r\n          <div className=\"edit-form\">\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Nombre</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"name\"\r\n                  value={currentPatient.name}\r\n                  onChange={this.onChangeName}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"surname\">Apellidos</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"surname\"\r\n                  value={currentPatient.surname}\r\n                  onChange={this.onChangeSurname}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"address\">Dirección</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"address\"\r\n                  value={currentPatient.address}\r\n                  onChange={this.onChangeAddress}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"city\">Ciudad</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"city\"\r\n                  value={currentPatient.city}\r\n                  onChange={this.onChangeCity}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"dni\">DNI</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"dni\"\r\n                  value={currentPatient.dni}\r\n                  onChange={this.onChangeDni}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"phone\">Teléfono</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"phone\"\r\n                  value={currentPatient.phone}\r\n                  onChange={this.onChangePhone}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"email\"\r\n                  value={currentPatient.email}\r\n                  onChange={this.onChangeEmail}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Descripción</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  value={currentPatient.description}\r\n                  onChange={this.onChangeDescription}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <strong>Estado:</strong>\r\n                </label>\r\n                {currentPatient.active ? \"Active\" : \"Inactive\"}\r\n              </div>\r\n            </form>\r\n            <div className=\"action-buttons\">\r\n              {currentPatient.active ? (\r\n                <button\r\n                  className=\"badge badge-primary mr-2\"\r\n                  onClick={() => this.updateActive(false)}\r\n                >\r\n                  Desactivar\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  className=\"badge badge-primary mr-2\"\r\n                  onClick={() => this.updateActive(true)}\r\n                >\r\n                  Activar\r\n                </button>\r\n              )}\r\n\r\n              <button\r\n                className=\"badge badge-danger mr-2\"\r\n                onClick={this.deletePatient}\r\n              >\r\n                Eliminar\r\n              </button>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"badge badge-success\"\r\n                onClick={this.updatePatient}\r\n              >\r\n                Actualizar\r\n              </button>\r\n              <p>{this.state.message}</p>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Patient...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import http from \"../http-common\";\r\n\r\nclass AppointmentDataService {\r\n  getAll(params) {\r\n    return http.get(\"/appointments\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/appointments/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/appointments\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/appointments/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/appointments/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/appointments`);\r\n  }\r\n\r\n  findBySurname(surname) {\r\n    return http.get(`/appointments?surname=${surname}`);\r\n  }\r\n\r\n  findByPatientId(id) {\r\n    return http.get(`/appointments/patient/${id}`);\r\n  }\r\n\r\n  findByDate(date) {\r\n    return http.get(`/appointments/scheduled?date=${date}`);\r\n  }\r\n\r\n  findByDateNext(date) {\r\n    return http.get(`/appointments/scheduled/next?date=${date}`);\r\n  }\r\n}\r\n\r\nexport default new AppointmentDataService();\r\n","import React, { Component } from \"react\";\r\nimport PatientDataService from \"../services/patient.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport './patients-list.component.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport AppointmentDataService from \"../services/appointment.service\";\r\nimport MediaQuery from 'react-responsive';\r\n\r\nexport default class PatientsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchSurname = this.onChangeSearchSurname.bind(this);\r\n    this.retrievePatients = this.retrievePatients.bind(this);\r\n    this.handlePageChange = this.handlePageChange.bind(this);\r\n    this.handlePageSizeChange = this.handlePageSizeChange.bind(this);\r\n    this.toggleMenu = this.toggleMenu.bind(this);\r\n    this.addAppointment = this.addAppointment.bind(this);\r\n    this.makeAppointment = this.makeAppointment.bind(this);\r\n\r\n    this.state = {\r\n      patients: [],\r\n      searchSurname: \"\",\r\n\r\n      page: 1,\r\n      count: 0,\r\n      pageSize: 9,\r\n    };\r\n\r\n    this.pageSizes = [3, 6, 9];\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.match.params.id);\r\n    this.retrievePatients();\r\n  }\r\n\r\n  onChangeSearchSurname(e) {\r\n    const searchSurname = e.target.value;\r\n\r\n    this.setState({\r\n      searchSurname: searchSurname,\r\n    });\r\n  }\r\n\r\n  getRequestParams(searchSurname, page, pageSize) {\r\n    let params = {};\r\n\r\n    if (searchSurname) {\r\n      params[\"surname\"] = searchSurname;\r\n    }\r\n\r\n    if (page) {\r\n      params[\"page\"] = page - 1;\r\n    }\r\n\r\n    if (pageSize) {\r\n      params[\"size\"] = pageSize;\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  retrievePatients() {\r\n    const { searchSurname, page, pageSize } = this.state;\r\n    const params = this.getRequestParams(searchSurname, page, pageSize);\r\n\r\n    PatientDataService.getAll(params)\r\n      .then((response) => {\r\n        const { patients, totalPages } = response.data;\r\n\r\n        this.setState({\r\n          patients: patients,\r\n          count: totalPages,\r\n        });\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  handlePageChange(event, value) {\r\n    this.setState(\r\n      {\r\n        page: value,\r\n      },\r\n      () => {\r\n        this.retrievePatients();\r\n      }\r\n    );\r\n  }\r\n\r\n  handlePageSizeChange(event) {\r\n    this.setState(\r\n      {\r\n        pageSize: event.target.value,\r\n        page: 1\r\n      },\r\n      () => {\r\n        this.retrievePatients();\r\n      }\r\n    );\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.key === 'Enter'){\r\n      console.log('enter press here! ');\r\n      this.retrievePatients();\r\n    }\r\n  }\r\n\r\n  toggleMenu(event){\r\n    // console.log(event.target.getAttribute('inx'));\r\n    // 1. Make a shallow copy of the items\r\n    let patients = [...this.state.patients];\r\n    // 2. Make a shallow copy of the item you want to mutate\r\n    let patient = {...patients[event.target.getAttribute('inx')]};\r\n    // console.log(patient);\r\n    // 3. Replace the property you're intested in\r\n    patient.expanded = !!!patient.expanded;\r\n    // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n    patients[event.target.getAttribute('inx')] = patient;\r\n    // 5. Set the state to our new copy\r\n    this.setState({patients});\r\n  }\r\n\r\n  makeAppointment(e){\r\n    console.log(this.props.match.params.id);\r\n\r\n    console.log(this.props.history.push('/appointments/'));\r\n    console.log('--------------------------------------------------');\r\n    var res = this.props.match.params.id.split(\"_\");\r\n    console.log(res);\r\n    console.log('kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk');\r\n    console.log(e.target.getAttribute('patientid'));\r\n  }\r\n\r\n  addAppointment(e) {\r\n\r\n    let hour_date_selectedDate = this.props.match.params.id.split(\"_\");\r\n\r\n    var data = {\r\n      madeBy: e.target.getAttribute('patientid'),\r\n      hour: hour_date_selectedDate[0],\r\n      date: hour_date_selectedDate[1],\r\n      service: e.target.getAttribute('serviceid'),\r\n      estate: \"pending\",\r\n    };\r\n\r\n    AppointmentDataService.create(data)\r\n      .then((response) => {\r\n\r\n        this.props.history.push('/appointments/after/' + hour_date_selectedDate[2])\r\n        // console.log(response.data);\r\n        // this.setState(state => {\r\n        //   const appointments = state.appointments.concat(response.data);\r\n\r\n        //   return {\r\n        //     appointments,\r\n        //   };\r\n\r\n        // });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    // const isMobile = useMediaQuery({\r\n    //   query: '(max-width: 760px)'\r\n    // });\r\n\r\n    const {\r\n      searchSurname,\r\n      patients,\r\n      page,\r\n      count,\r\n      pageSize,\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n      <div className=\"row\">\r\n        <div className=\"col-12 style={{ boxSizing: 'border-box' }}\">\r\n          <div className=\"input-group mb-3\" style={{ marginTop: '10px' }}>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Buscar por apellido\"\r\n              value={searchSurname}\r\n              onChange={this.onChangeSearchSurname}\r\n              onKeyPress={this.handleKeyPress}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={this.retrievePatients}\r\n              >\r\n                Buscar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n\r\n          <div id=\"accordion\">\r\n\r\n            { patients && patients.map((patient, index) => (\r\n\r\n\r\n              <div className=\"card\" key={index}>\r\n                <div className=\"card-header\"\r\n                     id={`heading${index}`}>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"col-8 col-md-9\" style={{ paddingLeft: '0px'}}>\r\n                      <h5 className=\"mb-0\">\r\n                        <button className={\"btn btn-link\" + (patient.expanded ? \"\" : \" collapsed\")}\r\n                                data-toggle=\"collapse\"\r\n                                data-target={`#collapse${index}`}\r\n                                aria-expanded={(patient.expanded ? \"true\" : \"false\")}\r\n                                aria-controls={`collapse${index}`}\r\n                                inx={index}\r\n                                onClick={ this.toggleMenu }\r\n                                >\r\n                          {patient.surname},&nbsp; {patient.name}\r\n                        </button>\r\n                      </h5>\r\n                    </div>\r\n                    <div className=\"col-4 col-md-3\">\r\n\r\n                      { this.props.match.params.id ?\r\n                        <Dropdown as={ButtonGroup}>\r\n                          <Button variant=\"secondary\" patientid={patient.id} serviceid=\"Acupuntura\" onClick={this.addAppointment}>\r\n                            <MediaQuery minDeviceWidth={760}>\r\n                              {(matches) =>\r\n                                matches\r\n                                  ? 'Acupuntura'\r\n                                  : 'Acu'\r\n                              }\r\n                            </MediaQuery>\r\n                          </Button>\r\n                          <Dropdown.Toggle split variant=\"secondary\" id=\"dropdown-split-basic\" />\r\n\r\n                          <Dropdown.Menu>\r\n                            <Dropdown.Item patientid={patient.id} serviceid=\"Psicología\" onClick={this.addAppointment}>Psicología</Dropdown.Item>\r\n                          </Dropdown.Menu>\r\n                        </Dropdown>\r\n                        :\r\n                        <Dropdown as={ButtonGroup}>\r\n                          <Button variant=\"secondary\" href={\"/addappointment/\" + patient.id}>Citar</Button>\r\n\r\n                          <Dropdown.Toggle split variant=\"secondary\" id=\"dropdown-split-basic\" />\r\n\r\n                          <Dropdown.Menu>\r\n                            <Dropdown.Item href={\"/appointments/patient/\" + patient.id}>Citas</Dropdown.Item>\r\n                            <Dropdown.Item href={\"/patients/\" + patient.id + \"/obs\"}>Historia</Dropdown.Item>\r\n                            <Dropdown.Divider />\r\n                            <Dropdown.Item href={\"/addinvoice/\" + patient.id}>Nueva factura</Dropdown.Item>\r\n                            <Dropdown.Item href={\"/invoices/patient/\" + patient.id}>Facturas</Dropdown.Item>\r\n                            <Dropdown.Divider />\r\n                            <Dropdown.Item href={\"/patients/\" + patient.id}>Editar</Dropdown.Item>\r\n                          </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                      }\r\n                      {/* comment */}\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n                <div id={`collapse${index}`}\r\n                     className={\"collapse\" + (patient.expanded ? \" show\" : \"\")}\r\n                     aria-labelledby={`heading${index}`}\r\n                     data-parent=\"#accordion\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-8 col-sm-10\">\r\n                        <p>{patient.address}</p>\r\n                        <p>{patient.city}</p>\r\n                        <p>DNI: {patient.dni}</p>\r\n                        <p>Tel: {patient.phone}</p>\r\n                        <p>{patient.email}</p>\r\n\r\n                        <p className=\"badgePatient\">\r\n                          {patient.active ? (\r\n                            <span className=\"badge badge-primary\">\r\n                              Activo\r\n                            </span>\r\n                          ):(\r\n                            <span className=\"badge badge-danger\">\r\n                              Inactivo\r\n                            </span>\r\n                          )}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"col-4 col-sm-2\">\r\n                        <Link\r\n                          type=\"button\"\r\n                          to={\"/patients/\" + patient.id}\r\n                          className=\"btn btn-secondary\"\r\n                        >\r\n                          Editar\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-12 col-sm-12\">\r\n                        <p>Notas: {patient.description}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            ))}\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"paging\">\r\n            <div>\r\n              <span className=\"selectText\">{\"Refs por página: \"}</span>\r\n              <select onChange={this.handlePageSizeChange} value={pageSize}>\r\n                {this.pageSizes.map((size) => (\r\n                  <option key={size} value={size}>\r\n                    {size}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <div className=\"bbb\">\r\n                <Pagination\r\n                  className=\"my-3\"\r\n                  count={count}\r\n                  page={page}\r\n                  siblingCount={1}\r\n                  boundaryCount={1}\r\n                  variant=\"outlined\"\r\n                  shape=\"rounded\"\r\n                  onChange={this.handlePageChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}","import React, { useState } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\n\r\n\r\n\r\n\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport moment from \"moment\";\r\nimport 'moment/locale/es';\r\nimport './appointment-case.component.css';\r\n\r\n\r\nconst AppointmentCase = (props) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n\r\n  const isMobile = useMediaQuery({\r\n    query: '(max-width: 760px)'\r\n  })\r\n\r\n  let { service, estate } = props.appointment;\r\n\r\n  function calcStyle(service, estate){\r\n\r\n    const appointA = {\r\n      backgroundColor: '#bde4ea',\r\n      height: '40px',\r\n      marginTop: '10px',\r\n      marginBottom: '10px',\r\n      // paddingLeft: '0px',\r\n      // paddingTop: '8px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      borderRadius: '4px',\r\n    };\r\n    const appointAF = {\r\n      backgroundColor: '#bde400',\r\n      height: '40px',\r\n      marginTop: '10px',\r\n      marginBottom: '10px',\r\n      // paddingLeft: '12px',\r\n      // paddingTop: '8px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      borderRadius: '4px',\r\n    };\r\n    const appointAC = {\r\n      backgroundColor: '#ff4d4d',\r\n      height: '40px',\r\n      marginTop: '10px',\r\n      marginBottom: '10px',\r\n      // paddingLeft: '12px',\r\n      // paddingTop: '8px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      borderRadius: '4px',\r\n    };\r\n\r\n    const appointP = {\r\n      backgroundColor: '#f4c9c9',\r\n      height: '40px',\r\n      marginTop: '10px',\r\n      marginBottom: '10px',\r\n      // paddingLeft: '12px',\r\n      // paddingTop: '8px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      borderRadius: '4px',\r\n    };\r\n    const appointPF = {\r\n      backgroundColor: '#bde400',\r\n      height: '40px',\r\n      marginTop: '10px',\r\n      marginBottom: '10px',\r\n      // paddingLeft: '12px',\r\n      // paddingTop: '8px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      borderRadius: '4px',\r\n    };\r\n    const appointPC = {\r\n      backgroundColor: '#ff4d4d',\r\n      height: '40px',\r\n      marginTop: '10px',\r\n      marginBottom: '10px',\r\n      // paddingLeft: '12px',\r\n      // paddingTop: '8px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      borderRadius: '4px',\r\n    };\r\n\r\n    switch (service) {\r\n      case 'Acupuntura':\r\n\r\n        switch (estate) {\r\n          case 'pending':\r\n            return appointA;\r\n          case 'fulfilled':\r\n            return appointAF;\r\n          case 'cancelled':\r\n            return appointAC;\r\n          default:\r\n            return {};\r\n        }\r\n      case 'Psicología':\r\n\r\n        switch (estate) {\r\n          case 'pending':\r\n            return appointP;\r\n          case 'fulfilled':\r\n            return appointPF;\r\n          case 'cancelled':\r\n            return appointPC;\r\n          default:\r\n            return {};\r\n        }\r\n      default:\r\n        return {};\r\n    }\r\n }\r\n\r\n  return (\r\n    <>\r\n      <div style={calcStyle(service, estate)} onClick={handleShow}>\r\n        { isMobile ?\r\n            props.appointment.madeBy?.name.substring(0,1) +\r\n            props.appointment.madeBy?.surname.substring(0,1) :\r\n            props.appointment.madeBy?.name}\r\n      </div>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{props.appointment.madeBy?.name} {props.appointment.madeBy?.surname}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>{props.appointment.service}</p>\r\n          <br/><small>creada: {moment(props.appointment.createdAt).fromNow()}</small>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          { props.appointment.estate === 'pending' ?\r\n              <div className=\"flex-container\">\r\n                <div>\r\n                  <Dropdown>\r\n                    <Dropdown.Toggle variant=\"danger\" id=\"dropdown-basic\">\r\n                      Cancelar\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                      <Dropdown.Item\r\n                        variant=\"danger\"\r\n                        aid={props.appointment.id}\r\n                        arrindx={props.index}\r\n                        indexdate={props.indexdate}\r\n                        onClick={(e) => {handleClose();props.cancelAppointment(e)}}\r\n                      >Cancelar la cita (definitivamente)</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </div>\r\n\r\n                <div>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    aid={props.appointment.id}\r\n                    arrindx={props.index}\r\n                    indexdate={props.indexdate}\r\n                    onClick={(e) => {handleClose();props.fulfillAppointment(e)}}\r\n                  >\r\n                    Confirmar\r\n                  </Button>\r\n                </div>\r\n\r\n              </div>\r\n            :\r\n            \"\"\r\n          }\r\n          { props.appointment.estate === 'fulfilled' ?\r\n            <div>\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"danger\" id=\"dropdown-basic\">\r\n                  Cancelar\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    variant=\"danger\"\r\n                    aid={props.appointment.id}\r\n                    arrindx={props.index}\r\n                    indexdate={props.indexdate}\r\n                    onClick={(e) => {handleClose();props.cancelAppointment(e)}}\r\n                  >Cancelar la cita (definitivamente)</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n            :\r\n            \"\"\r\n          }\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppointmentCase;\r\n","import React, { Component } from \"react\";\r\nimport AppointmentDataService from \"../services/appointment.service\";\r\nimport moment from \"moment\";\r\n// import 'date-fns';\r\n// import DateFnsUtils from '@date-io/date-fns';\r\nimport MomentUtils from '@date-io/moment';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport 'moment/locale/es';\r\n\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Button from 'react-bootstrap/Button';\r\n// import Popover from 'react-bootstrap/Popover';\r\n// import OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\n\r\n// import AppointmentItem from './appointment-item';\r\nimport AppointmentCase from './appointment-case.component';\r\n\r\n\r\n\r\n\r\nimport './appointments-list.component.css';\r\n\r\n\r\nmoment.locale(\"es\");\r\n\r\nexport default class AddAppointment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDateChange = this.handleDateChange.bind(this);\r\n    this.retrieveAppointments = this.retrieveAppointments.bind(this);\r\n    this.addAppointment = this.addAppointment.bind(this);\r\n    this.deleteAppointment = this.deleteAppointment.bind(this);\r\n    this.previousDates = this.previousDates.bind(this);\r\n    this.followingDates = this.followingDates.bind(this);\r\n    this.fulfillAppointment = this.fulfillAppointment.bind(this);\r\n    this.cancelAppointment = this.cancelAppointment.bind(this);\r\n    this.redirectPatients = this.redirectPatients.bind(this);\r\n    // this.resize = this.resize.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      apointee: \"fff\",\r\n      // selectedDate: moment(\"01-01-2020\", \"DD-MM-YYYY\"),\r\n      selectedDate: moment(),\r\n      appointments: [],\r\n      service: \"Acupuntura\",\r\n      // showShortName: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(moment(\"01-01-2020\", \"DD-MM-YYYY\").format('DD-MM-YYYY'));\r\n    if (this.props.match.params.selected){\r\n      this.setState({\r\n        selectedDate: moment(this.props.match.params.selected, \"DD-MM-YYYY\"),\r\n      }, () => {\r\n       this.retrieveAppointments()\r\n      });\r\n    }else{\r\n      this.setState({\r\n        selectedDate: moment(),\r\n      }, () => {\r\n       this.retrieveAppointments()\r\n      });\r\n    }\r\n\r\n\r\n    // window.addEventListener(\"resize\", this.resize.bind(this));\r\n    // this.resize();\r\n\r\n    // this.retrieveAppointments();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // https://medium.com/better-programming/when-to-use-callback-function-of-setstate-in-react-37fff67e5a6c\r\n    // if (this.state.currentMonth !== prevState.currentMonth) {\r\n    //   this.props.getCalendarData(this.state.currentMonth);\r\n    // }\r\n  }\r\n  // componentWillUnmount() {\r\n  //     window.removeEventListener(\"resize\", this.resize.bind(this));\r\n  // }\r\n  // resize() {\r\n  //   console.log(window.innerWidth <= 600);\r\n  //     this.setState({showShortName: window.innerWidth <= 600});\r\n  // }\r\n  retrieveAppointments() {\r\n    const { selectedDate } = this.state;\r\n\r\n    AppointmentDataService.findByDateNext(selectedDate.format('DD/MM/YYYY'))\r\n      .then((response) => {\r\n        // console.log(response);\r\n        const { nextFiveDates } = response.data;\r\n        // console.log(nextFiveDates);\r\n        this.setState({\r\n          appointments: nextFiveDates,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  handleDateChange(date) {\r\n    this.setState({\r\n      selectedDate: date,\r\n    }, () => {\r\n     this.retrieveAppointments()\r\n    })}\r\n\r\n  deleteAppointment = (i,appointment) => {\r\n    console.log(\"---------- analizar: usar i o id de mongodb en key ----------------\");\r\n    console.log(i);\r\n    console.log(appointment);\r\n    console.log(\"-------------------------------------------------------------------\");\r\n\r\n    AppointmentDataService.delete(appointment)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n\r\n        this.setState(state => {\r\n          const appointments = state.appointments.filter((item, j) => i !== j);\r\n\r\n          return {\r\n            appointments,\r\n          };\r\n        });\r\n\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  };\r\n\r\n  addAppointment(e) {\r\n\r\n    console.log(\"Esto no se ejecuta NUNCA\")\r\n    // REVISAR ESTO\r\n    var data = {\r\n      surname: this.props.match.params.surname,\r\n      hour: e.target.getAttribute('inx'),\r\n      date: this.state.selectedDate.format('DD/MM/YYYY'),\r\n      service: this.state.service,\r\n      estate: \"pending\",\r\n    };\r\n\r\n    AppointmentDataService.create(data)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n        this.setState(state => {\r\n          const appointments = state.appointments.concat(response.data);\r\n\r\n          return {\r\n            appointments,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n\r\n  previousDates(e) {\r\n    // console.log(this.state.apointee);\r\n    this.setState({\r\n      selectedDate: moment(this.state.selectedDate, \"DD-MM-YYYY\").add(-5,'days'),\r\n    }, () => {\r\n     this.retrieveAppointments()\r\n    });\r\n\r\n\r\n  }\r\n\r\n  followingDates(e) {\r\n    // console.log(moment(this.state.selectedDate, \"DD-MM-YYYY\").add(5,'days').format(\"DD-MM-YYYY\"));\r\n    this.setState({\r\n      selectedDate: moment(this.state.selectedDate, \"DD-MM-YYYY\").add(5,'days'),\r\n    }, () => {\r\n     this.retrieveAppointments()\r\n    });\r\n\r\n  }\r\n\r\n  cancelAppointment(e){\r\n\r\n    const id = e.target.getAttribute('aid');\r\n    const arrIndx = e.target.getAttribute('arrindx');\r\n    const indexdate = e.target.getAttribute('indexdate');\r\n\r\n    const data = {\r\n      estate: \"cancelled\",\r\n    };\r\n\r\n    AppointmentDataService.update(id, data)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n        this.setState(state => {\r\n\r\n          let appointments = [...state.appointments];\r\n          appointments[indexdate][arrIndx] = response.data;\r\n\r\n          return {\r\n            appointments,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  fulfillAppointment(e) {\r\n\r\n    const id = e.target.getAttribute('aid');\r\n    const arrIndx = e.target.getAttribute('arrindx');\r\n    const indexdate = e.target.getAttribute('indexdate');\r\n\r\n    const data = {\r\n      estate: \"fulfilled\",\r\n    };\r\n\r\n    AppointmentDataService.update(id, data)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n        this.setState(state => {\r\n\r\n          // console.log(response.data);\r\n          // 1. Make a shallow copy of the items\r\n          let appointments = [...state.appointments];\r\n          // 2. Make a shallow copy of the item you want to mutate\r\n          // let item = {...appointments[arrIndx]};\r\n          // 3. Replace the property you're intested in\r\n          // item.name = 'newName';\r\n          // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n          appointments[indexdate][arrIndx] = response.data;\r\n\r\n          // sustituir el appo. por el que llega del backend en vez de concat\r\n          // const appointments = state.appointments.concat(response.data);\r\n\r\n          return {\r\n            appointments,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  redirectPatients = (hour, day, selectedDate) => {\r\n    // console.log('red ' + dh);\r\n    // return <Redirect to={`/patients`}/>\r\n\r\n  // let momentDate = moment(date, \"DD-MM-YYYY\");\r\n  // let mongoDate = moment(momentDate).format('YYYY-MM-DD');\r\n\r\n\r\n    // console.log('lllllllllllllllllllllllllllllllllllllll')\r\n    // console.log(selectedDate);\r\n\r\n    let qdate = moment(this.state.selectedDate).add(day,'days').format('DD-MM-YYYY');\r\n    // console.log(qdate);\r\n\r\n    let id = hour + \"_\" + qdate + \"_\" + selectedDate;\r\n\r\n    // console.log(id);\r\n    this.props.history.push('/patients/appoint/' + id);\r\n  }\r\n\r\n  render() {\r\n\r\n    const timeSlotConainer = {\r\n      border: '1px solid lightgrey',\r\n      minHeight: '80px',\r\n    };\r\n    const hourHeader = {\r\n      border: '1px solid lightgrey',\r\n    };\r\n    const timeSlot = {\r\n      backgroundColor: 'lightgrey',\r\n      // height: '50px',\r\n      width: '100px',\r\n    };\r\n    const daySlot = {\r\n      backgroundColor: 'lightgrey',\r\n      // width: '100px',\r\n      // border: '1px solid black'\r\n    };\r\n\r\n\r\n    const dropdownService = {\r\n      paddingTop: '25px',\r\n    }\r\n\r\n    const aaaa = {\r\n      height: '40px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      // border: '1px solid black',\r\n    }\r\n\r\n    const {\r\n      appointments,\r\n      selectedDate,\r\n    } = this.state;\r\n\r\n    // console.log(selectedDate.format('DD/MM/YYYY'));\r\n    return (\r\n      <>\r\n      <div className=\"row\">\r\n        <div className=\"col-5\">\r\n          {/* minDate={\"01/01/2020\"} */}\r\n          <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n              <KeyboardDatePicker\r\n                margin=\"normal\"\r\n                id=\"date-picker-dialog\"\r\n                label=\"Fecha\"\r\n                format=\"DD/MM/yyyy\"\r\n                value={this.state.selectedDate}\r\n                onChange={this.handleDateChange}\r\n                cancelLabel=\"Cancelar\"\r\n                okLabel=\"Aceptar\"\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n              />\r\n          </MuiPickersUtilsProvider>\r\n        </div>\r\n        <div className=\"col-7\">\r\n          <div style={dropdownService}>\r\n            <ButtonGroup>\r\n              <Button variant=\"secondary\" onClick={this.previousDates}>Anteriores</Button>\r\n              <Button variant=\"secondary\" onClick={this.followingDates}>Siguientes</Button>\r\n            </ButtonGroup>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n\r\n\r\n          {/* --------------------------- HEADER --------------------------------------*/}\r\n          <div className=\"row\">\r\n            <div className=\"col-2 col-sm-1 padding-0\" style={daySlot}>\r\n            </div>\r\n            { Array.from({length: 5}, (item, date) => (\r\n              <div className=\"col col-sm\" key={date} style={hourHeader}>\r\n                {moment(selectedDate, \"DD-MM-YYYY\").add(date,'days').format('DD')}\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n\r\n          {Array.from({length: 12}, (item, hour) => (\r\n\r\n            <div className=\"row\" key={hour}>\r\n              <div className=\"col-2 col-sm-1 padding-0\" style={timeSlot}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-2\">\r\n                    {(hour + 9).toString() + \":00\"}\r\n                  </div>\r\n                  <div style={aaaa} className=\"col-10\">\r\n                    &nbsp;\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              { appointments && appointments.map((appointmentDates, indexDate) => (\r\n\r\n                <div className=\"col col-sm padding-0\"\r\n                  style={timeSlotConainer}\r\n                  key={indexDate}\r\n                  onClick={() => {\r\n                    // console.log((hour + 9).toString() + \":00\");\r\n                    this.redirectPatients((hour + 9).toString() + \":00\", indexDate, moment(this.state.selectedDate, \"DD-MM-YYYY\").format(\"DD-MM-YYYY\"));\r\n                    }\r\n                  }\r\n                >\r\n\r\n                  { appointmentDates && appointmentDates.map((appointment, index) => {\r\n\r\n                    return ((hour + 9).toString() + \":00\") === appointment.hour ?\r\n                        <div key={index} className=\"appointmentItem\">\r\n                          <div onClick={(e) => {e.stopPropagation()}}>\r\n                          {/*\r\n                            <AppointmentItem\r\n                              appointment={appointment}\r\n                              index={index}\r\n                              indexdate={indexDate}\r\n                              fulfillAppointment={ this.fulfillAppointment }\r\n                              cancelAppointment={this.cancelAppointment}\r\n                            />\r\n                          */}\r\n                            <AppointmentCase\r\n                              appointment={appointment}\r\n                              index={index}\r\n                              indexdate={indexDate}\r\n                              fulfillAppointment={ this.fulfillAppointment }\r\n                              cancelAppointment={this.cancelAppointment}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                    :\r\n                      \"\"\r\n                    }\r\n                  )}\r\n\r\n\r\n                </div>\r\n\r\n              ))}\r\n\r\n            </div>\r\n\r\n          ))}\r\n\r\n          <p>&nbsp;</p>\r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport AppointmentDataService from \"../services/appointment.service\";\r\nimport moment from \"moment\";\r\n// import 'date-fns';\r\n// import DateFnsUtils from '@date-io/date-fns';\r\nimport MomentUtils from '@date-io/moment';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport 'moment/locale/es';\r\n\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\n\r\nmoment.locale(\"es\");\r\n\r\nexport default class AddAppointment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDateChange = this.handleDateChange.bind(this);\r\n    this.retrieveAppointments = this.retrieveAppointments.bind(this);\r\n    this.addAppointment = this.addAppointment.bind(this);\r\n    this.deleteAppointment = this.deleteAppointment.bind(this);\r\n    this.setService = this.setService.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      apointee: \"\",\r\n      // selectedDate: moment(\"01-01-2020\", \"DD-MM-YYYY\"),\r\n      selectedDate:moment(),\r\n      appointments: [],\r\n      service: \"Acupuntura\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(moment(\"01-01-2020\", \"DD-MM-YYYY\").format('DD-MM-YYYY'));\r\n    this.retrieveAppointments();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // https://medium.com/better-programming/when-to-use-callback-function-of-setstate-in-react-37fff67e5a6c\r\n    // if (this.state.currentMonth !== prevState.currentMonth) {\r\n    //   this.props.getCalendarData(this.state.currentMonth);\r\n    // }\r\n  }\r\n  retrieveAppointments() {\r\n    const { selectedDate } = this.state;\r\n\r\n    AppointmentDataService.findByDate(selectedDate.format('DD/MM/YYYY'))\r\n      .then((response) => {\r\n        // console.log(response);\r\n        const { appointments } = response.data;\r\n\r\n        this.setState({\r\n          appointments: appointments,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  handleDateChange(date) {\r\n    // console.log(date);\r\n\r\n    this.setState({\r\n      selectedDate: date,\r\n    }, () => {\r\n     this.retrieveAppointments()\r\n    })}\r\n\r\n  deleteAppointment = (i,appointment) => {\r\n    console.log(\"---------- analizar: usar i o id de mongodb en key ----------------\");\r\n    console.log(i);\r\n    console.log(appointment);\r\n    console.log(\"-------------------------------------------------------------------\");\r\n\r\n    AppointmentDataService.delete(appointment)\r\n      .then((response) => {\r\n\r\n        console.log(response.data);\r\n\r\n        this.setState(state => {\r\n          const appointments = state.appointments.filter((item, j) => i !== j);\r\n\r\n          return {\r\n            appointments,\r\n          };\r\n        });\r\n\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  };\r\n\r\n  addAppointment(e) {\r\n\r\n    // console.log(this.state.selectedDate.format('DD-MM-YYYY'));\r\n\r\n    var data = {\r\n      hour: e.target.getAttribute('inx'),\r\n      date: this.state.selectedDate.format('DD-MM-YYYY'),\r\n      service: this.state.service,\r\n      madeBy: this.props.match.params.id\r\n    };\r\n\r\n\r\n    // console.log(data);\r\n\r\n    AppointmentDataService.create(data)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n        this.setState(state => {\r\n          const appointments = state.appointments.concat(response.data);\r\n\r\n          return {\r\n            appointments,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n\r\n  setService(e) {\r\n    // console.log(e.target.getAttribute('service'));\r\n    this.setState({\r\n      service: e.target.getAttribute('service'),\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const timeSlotConainer = {\r\n      // backgroundColor: '#eaf2bf',\r\n      // height: '50px',\r\n      // padding: '10px',\r\n      border: '1px solid lightgrey',\r\n    };\r\n    const timeSlot = {\r\n      backgroundColor: 'lightgrey',\r\n      // height: '50px',\r\n    };\r\n    const appointmentAcu = {\r\n      backgroundColor: '#bde4ea',\r\n      // height: '50px',\r\n      margin: '5px',\r\n    };\r\n    const appointmentPsico = {\r\n      backgroundColor: '#f4c9c9',\r\n      // height: '50px',\r\n      margin: '5px',\r\n    };\r\n\r\n    const dropdownService = {\r\n      paddingTop: '25px',\r\n      // margin: '25px',\r\n      // backgroundColor: '#f4c9c9',\r\n      // border: '10px solid lightgrey',\r\n    }\r\n\r\n    const {\r\n      appointments,\r\n    } = this.state;\r\n\r\n    // console.log(selectedDate.format('DD/MM/YYYY'));\r\n\r\n    return (\r\n      <>\r\n      <div className=\"row\">\r\n        <div className=\"col-5\">\r\n          {/* minDate={\"01/01/2020\"} */}\r\n          <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n              <KeyboardDatePicker\r\n                margin=\"normal\"\r\n                id=\"date-picker-dialog\"\r\n                label=\"Fecha\"\r\n                format=\"DD/MM/yyyy\"\r\n                minDate={moment()}\r\n                value={this.state.selectedDate}\r\n                onChange={this.handleDateChange}\r\n                cancelLabel=\"Cancelar\"\r\n                okLabel=\"Aceptar\"\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n              />\r\n          </MuiPickersUtilsProvider>\r\n\r\n        </div>\r\n        <div className=\"col-7\">\r\n          <div style={dropdownService}>\r\n            <InputGroup>\r\n              <DropdownButton\r\n                as={InputGroup.Prepend}\r\n                variant=\"outline-secondary\"\r\n                title=\"Servicio\"\r\n                id=\"input-group-dropdown-1\"\r\n              >\r\n                <Dropdown.Item href=\"#\" service=\"Acupuntura\" onClick={this.setService}>Acupuntura</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\" service=\"Psicología\" onClick={this.setService}>Psicología</Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item href=\"#\">Otros</Dropdown.Item>\r\n              </DropdownButton>\r\n              <FormControl aria-describedby=\"basic-addon1\" value={this.state.service} readOnly />\r\n            </InputGroup>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          {Array.from({length: 12}, (item, hour) => (\r\n\r\n            <div className=\"row\" key={hour}>\r\n              <div className=\"col-2\" style={timeSlot}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-2\">\r\n                    {(hour + 9).toString() + \":00\"}\r\n                  </div>\r\n                  <div className=\"col-10\">\r\n                    <button style={{marginLeft: \"0px\"}}  inx={(hour + 9).toString() + \":00\"} onClick={this.addAppointment} className=\"btn btn-secondary\">\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-10\" style={timeSlotConainer}>\r\n\r\n                { appointments && appointments.map((appointment, index) => {\r\n\r\n                  return ((hour + 9).toString() + \":00\") === appointment.hour ?\r\n                    <Toast onClose={() => this.deleteAppointment(index, appointment.id)} style={ appointment.service === 'Acupuntura' ? appointmentAcu : appointmentPsico} key={index}>\r\n                      <Toast.Header>\r\n                        <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n                        <strong className=\"mr-auto\">{appointment.service}</strong>\r\n                        <small>{moment(appointment.createdAt).fromNow()}</small>\r\n                      </Toast.Header>\r\n                      <Toast.Body>{appointment.madeBy.surname}, {appointment.madeBy.name}</Toast.Body>\r\n                    </Toast>\r\n                  :\r\n                    \"\"\r\n                  }\r\n                )}\r\n\r\n              </div>\r\n            </div>\r\n\r\n          ))}\r\n\r\n          <p>&nbsp;</p>\r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, {useState} from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport moment from \"moment\";\r\nimport MomentUtils from '@date-io/moment';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport 'moment/locale/es';\r\n\r\n\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nfunction SearchModal(props) {\r\n\r\n\tconst [date1, setDate1] = useState(moment());\r\n\tconst [date2, setDate2] = useState(moment());\r\n\tconst [filter, setFilter] = useState('pending');\r\n\r\n\r\n\tfunction doFilter(e){\r\n    console.log(e.target.getAttribute('filter'));\r\n    setFilter(e.target.getAttribute('filter'));\r\n    // this.setState({\r\n    //   filter: e.target.getAttribute('filter'),\r\n    // });\r\n  }\r\n  function handleChange(event) {\r\n    // Here, we invoke the callback with the new value\r\n    // props.handleState(event.target.value);\r\n    props.handleState(filter);\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={props.handleShow}>\r\n        Filtrar\r\n      </Button>\r\n\r\n      <Modal show={props.show} onHide={props.handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Filtrar citas</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n\t        <Container>\r\n\t          <Row>\r\n\t            <Col xs={6} md={4}>\r\n\t\t\t          <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n\t\t\t            <KeyboardDatePicker\r\n\t\t\t              margin=\"normal\"\r\n\t\t\t              id=\"date-picker-dialog-1\"\r\n\t\t\t              format=\"DD/MM/yyyy\"\r\n\t\t\t              value={date1}\r\n\t\t\t              onChange={setDate1}\r\n\t\t\t              cancelLabel=\"Cancelar\"\r\n\t\t\t              okLabel=\"Aceptar\"\r\n\t\t\t              KeyboardButtonProps={{\r\n\t\t\t                'aria-label': 'change date',\r\n\t\t\t              }}\r\n\t\t\t            />\r\n\t\t\t          </MuiPickersUtilsProvider>\r\n\t            </Col>\r\n\t            <Col xs={6} md={4}>\r\n\t\t\t          <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n\t\t\t            <KeyboardDatePicker\r\n\t\t\t              margin=\"normal\"\r\n\t\t\t              id=\"date-picker-dialog-2\"\r\n\t\t\t              format=\"DD/MM/yyyy\"\r\n\t\t\t              value={date2}\r\n\t\t\t              onChange={setDate2}\r\n\t\t\t              cancelLabel=\"Cancelar\"\r\n\t\t\t              okLabel=\"Aceptar\"\r\n\t\t\t              KeyboardButtonProps={{\r\n\t\t\t                'aria-label': 'change date',\r\n\t\t\t              }}\r\n\t\t\t            />\r\n\t\t\t          </MuiPickersUtilsProvider>\r\n\t            </Col>\r\n\t          </Row>\r\n\t          <Row>\r\n\t            <Col xs={12} md={8}>\r\n            <InputGroup>\r\n              <DropdownButton\r\n                as={InputGroup.Prepend}\r\n                variant=\"outline-secondary\"\r\n                title={filter}\r\n                id=\"input-group-dropdown-1\"\r\n              >\r\n                <Dropdown.Item href=\"#\" filter=\"pending\" onClick={doFilter}>Pendientes</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\" filter=\"cancelled\" onClick={doFilter}>Canceladas</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\" filter=\"fulfilled\" onClick={doFilter}>Cumplidas</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\" filter=\"all\" onClick={doFilter}>Todas</Dropdown.Item>\r\n              </DropdownButton>\r\n              {/*<FormControl aria-describedby=\"basic-addon1\" value={this.state.filter} readOnly />*/}\r\n            </InputGroup>\r\n\t            </Col>\r\n\t          </Row>\r\n\r\n\t        </Container>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={props.handleClose}>\r\n            Cerrar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleChange}>\r\n            Filtrar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchModal;","import React, { Component } from \"react\";\r\nimport AppointmentDataService from \"../services/appointment.service\";\r\nimport moment from \"moment\";\r\nimport 'moment/locale/es';\r\nimport Card from 'react-bootstrap/Card';\r\nimport SearchModal from \"./search.component\";\r\n\r\nmoment.locale(\"es\");\r\n\r\nexport default class AddAppointment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDateChange = this.handleDateChange.bind(this);\r\n    this.retrieveAppointments = this.retrieveAppointments.bind(this);\r\n    this.setFilter = this.setFilter.bind(this);\r\n    this.cancelAppointment = this.cancelAppointment.bind(this);\r\n    this.fulfillAppointment = this.fulfillAppointment.bind(this);\r\n    this.handleCloseModal = this.handleCloseModal.bind(this);\r\n    this.handleShowModal = this.handleShowModal.bind(this);\r\n    this.handleState = this.handleState.bind(this);\r\n\r\n    this.state = {\r\n      id: this.props.match.params.id,\r\n      // selectedDate: moment(\"01-01-2020\", \"DD-MM-YYYY\"),\r\n      filter: \"pending\",\r\n      selectedDate: moment(),\r\n      appointments: [],\r\n      service: \"Acupuntura\",\r\n      show: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(moment(\"01-01-2020\", \"DD-MM-YYYY\").format('DD-MM-YYYY'));\r\n    console.log('kkkkkkkkkkkkkkk');\r\n    this.retrieveAppointments();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // https://medium.com/better-programming/when-to-use-callback-function-of-setstate-in-react-37fff67e5a6c\r\n    // if (this.state.currentMonth !== prevState.currentMonth) {\r\n    //   this.props.getCalendarData(this.state.currentMonth);\r\n    // }\r\n  }\r\n  retrieveAppointments() {\r\n    const { id } = this.state;\r\n\r\n    AppointmentDataService.findByPatientId(id)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        const { appointments } = response.data;\r\n\r\n        this.setState({\r\n          appointments: appointments,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  handleDateChange(date) {\r\n    // console.log(date);\r\n    this.setState({\r\n      selectedDate: date,\r\n    }, () => {\r\n     this.retrieveAppointments()\r\n    })\r\n  }\r\n\r\n  cancelAppointment(e) {\r\n\r\n  \tconst id = e.target.getAttribute('aid');\r\n  \tconst arrIndx = e.target.getAttribute('arrindx');\r\n\r\n    const data = {\r\n      estate: \"cancelled\",\r\n    };\r\n\r\n    AppointmentDataService.update(id, data)\r\n      .then((response) => {\r\n\r\n        console.log(response.data);\r\n        this.setState(state => {\r\n\r\n        \t// console.log(response.data);\r\n\t\t\t    // 1. Make a shallow copy of the items\r\n\t\t\t    let appointments = [...state.appointments];\r\n\t\t\t    // 2. Make a shallow copy of the item you want to mutate\r\n\t\t\t    // let item = {...appointments[arrIndx]};\r\n\t\t\t    // 3. Replace the property you're intested in\r\n\t\t\t    // item.name = 'newName';\r\n\t\t\t    // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n\t\t\t    appointments[arrIndx] = response.data;\r\n\r\n        \t// sustituir el appo. por el que llega del backend en vez de concat\r\n          // const appointments = state.appointments.concat(response.data);\r\n\r\n          return {\r\n            appointments,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n\r\n  fulfillAppointment(e) {\r\n\r\n    const id = e.target.getAttribute('aid');\r\n    const arrIndx = e.target.getAttribute('arrindx');\r\n\r\n    const data = {\r\n      estate: \"fulfilled\",\r\n    };\r\n\r\n    AppointmentDataService.update(id, data)\r\n      .then((response) => {\r\n\r\n        console.log(response.data);\r\n        this.setState(state => {\r\n\r\n          let appointments = [...state.appointments];\r\n          appointments[arrIndx] = response.data;\r\n\r\n          console.log(appointments);\r\n          return {\r\n            appointments,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n  setFilter(e) {\r\n    // console.log(e.target.getAttribute('filter'));\r\n    this.setState({\r\n      filter: e.target.getAttribute('filter'),\r\n    });\r\n  }\r\n\r\n  handleState(filter) {\r\n    // console.log(filter);\r\n    this.setState({\r\n      show: false,\r\n      filter: filter,\r\n    });\r\n  }\r\n  handleCloseModal() {\r\n    this.setState({\r\n      show: false,\r\n    });\r\n  }\r\n\r\n  handleShowModal() {\r\n    this.setState({\r\n      show: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      appointments,\r\n      filter,\r\n      show,\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n\r\n          { appointments && appointments.filter(appointment => filter === 'all' ? true : appointment.estate === filter).map((appointment, index) => {\r\n\r\n            return <Card style={{ marginBottom: '10px', marginTop: '10px' }} key={index}>\r\n              <Card.Body>\r\n                <Card.Title>{appointment.service}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">\r\n                  {moment(appointment.date).format(\"DD-MM-YYYY\")}\r\n                  &nbsp;a las {appointment.hour}\r\n                  </Card.Subtitle>\r\n                <Card.Text>\r\n                  {/*{this.props.match.params.id}*/}\r\n                  {appointment.madeBy.name}&nbsp;{appointment.madeBy.surname}<br/>\r\n                  <small>creada {moment(appointment.createdAt).fromNow()}</small><br/>\r\n                  <small>{appointment.id}</small><br/>\r\n                </Card.Text>\r\n                { appointment.estate === \"pending\" ? <div>\r\n                <Card.Link href=\"\" aid={appointment.id} arrindx={index} onClick={this.cancelAppointment}>Cancelar</Card.Link>\r\n                <Card.Link href=\"\" aid={appointment.id} arrindx={index} onClick={this.fulfillAppointment}>Cumplir</Card.Link>\r\n                </div>\r\n                : appointment.estate === \"fulfilled\" ? <span className=\"badge badge-success\">Cumplida</span> :\r\n                <span className=\"badge badge-warning\">Cancelada</span>\r\n                }\r\n              </Card.Body>\r\n            </Card>\r\n\r\n            }\r\n          )}\r\n          <p>&nbsp;</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div style={{ /*width: '18rem'*/ }} className=\"col-12\">\r\n          <div className=\"d-flex justify-content-center\">\r\n            <SearchModal show={show} handleClose={this.handleCloseModal} handleShow={this.handleShowModal} handleState={this.handleState}/>\r\n          </div>\r\n          <p>&nbsp;</p>\r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import http from \"../http-common\";\r\n\r\nclass InvoiceDataService {\r\n  getAll(params) {\r\n    return http.get(\"/invoices\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/invoices/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/invoices\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/invoices/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/invoices/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/invoices`);\r\n  }\r\n\r\n  findBySurname(surname) {\r\n    return http.get(`/invoices?surname=${surname}`);\r\n  }\r\n\r\n  findByPatientId(id) {\r\n    return http.get(`/invoices/patient/${id}`);\r\n  }\r\n\r\n  findByDate(date) {\r\n    return http.get(`/invoices/scheduled?date=${date}`);\r\n  }\r\n\r\n  findByDateNext(date) {\r\n    return http.get(`/invoices/scheduled/next?date=${date}`);\r\n  }\r\n}\r\n\r\nexport default new InvoiceDataService();\r\n","import React, { Component } from \"react\";\r\nimport InvoiceDataService from \"../services/invoice.service\";\r\n// import { Link } from \"react-router-dom\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport './invoices-list.component.css';\r\n// import Button from 'react-bootstrap/Button';\r\n// import SearchModal from \"./search.component\";\r\nimport moment from \"moment\";\r\nimport MomentUtils from '@date-io/moment';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport 'moment/locale/es';\r\n\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n// import SplitButton from 'react-bootstrap/SplitButton';\r\n// import ButtonGroup from 'react-bootstrap/ButtonGroup';\r\n\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\n\r\n\r\n\r\nexport default class InvoicesList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchSurname = this.onChangeSearchSurname.bind(this);\r\n    this.retrieveInvoices = this.retrieveInvoices.bind(this);\r\n    this.handlePageChange = this.handlePageChange.bind(this);\r\n    this.handlePageSizeChange = this.handlePageSizeChange.bind(this);\r\n    this.toggleMenu = this.toggleMenu.bind(this);\r\n    this.setDate1 = this.setDate1.bind(this);\r\n    this.setDate2 = this.setDate2.bind(this);\r\n    this.cancelInvoice = this.cancelInvoice.bind(this);\r\n    this.payInvoice = this.payInvoice.bind(this);\r\n    this.sayHi = this.sayHi.bind(this);\r\n\r\n\r\n    this.state = {\r\n      invoices: [],\r\n      searchSurname: \"\",\r\n      date1: moment().startOf('quarter'),\r\n      date2: moment(),\r\n      page: 1,\r\n      count: 0,\r\n      pageSize: 6,\r\n    };\r\n\r\n    this.pageSizes = [3, 6, 9];\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveInvoices();\r\n  }\r\n\r\n  onChangeSearchSurname(e) {\r\n    const searchSurname = e.target.value;\r\n\r\n    this.setState({\r\n      searchSurname: searchSurname,\r\n    });\r\n  }\r\n\r\n  getRequestParams(searchSurname, date1, date2, page, pageSize) {\r\n    let params = {};\r\n\r\n    if (searchSurname) {\r\n      params[\"surname\"] = searchSurname;\r\n    }\r\n\r\n    if (date1) {\r\n      params[\"date1\"] = date1;\r\n    }\r\n\r\n    if (date2) {\r\n      params[\"date2\"] = date2;\r\n    }\r\n\r\n    if (page) {\r\n      params[\"page\"] = page - 1;\r\n    }\r\n\r\n    if (pageSize) {\r\n      params[\"size\"] = pageSize;\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  retrieveInvoices() {\r\n    const { searchSurname, date1, date2, page, pageSize } = this.state;\r\n    const params = this.getRequestParams(searchSurname, date1.format(\"DD-MM-YYYY\"), date2.format(\"DD-MM-YYYY\"), page, pageSize);\r\n\r\n    // console.log(params);\r\n\r\n    InvoiceDataService.getAll(params)\r\n      .then((response) => {\r\n        const { invoices, totalPages } = response.data;\r\n\r\n        // console.log(invoices);\r\n        this.setState({\r\n          invoices: invoices,\r\n          count: totalPages,\r\n        });\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  handlePageChange(event, value) {\r\n    this.setState(\r\n      {\r\n        page: value,\r\n      },\r\n      () => {\r\n        this.retrieveInvoices();\r\n      }\r\n    );\r\n  }\r\n\r\n  handlePageSizeChange(event) {\r\n    this.setState(\r\n      {\r\n        pageSize: event.target.value,\r\n        page: 1\r\n      },\r\n      () => {\r\n        this.retrieveInvoices();\r\n      }\r\n    );\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.key === 'Enter'){\r\n      console.log('enter press here! ');\r\n      this.retrieveInvoices();\r\n    }\r\n  }\r\n\r\n  toggleMenu(event){\r\n    // console.log(event.target.getAttribute('inx'));\r\n    // 1. Make a shallow copy of the items\r\n    let invoices = [...this.state.invoices];\r\n    // 2. Make a shallow copy of the item you want to mutate\r\n    let invoice = {...invoices[event.target.getAttribute('inx')]};\r\n    // console.log(invoice);\r\n    // 3. Replace the property you're intested in\r\n    invoice.expanded = !!!invoice.expanded;\r\n    // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n    invoices[event.target.getAttribute('inx')] = invoice;\r\n    // 5. Set the state to our new copy\r\n    this.setState({invoices});\r\n  }\r\n\r\n  setDate1(date) {\r\n    this.setState(\r\n      {\r\n        date1: date,\r\n        pageSize: 3,\r\n        page: 1,\r\n        count: 0\r\n      },\r\n      () => {\r\n        this.retrieveInvoices();\r\n      }\r\n    );\r\n  }\r\n\r\n  setDate2(date) {\r\n    this.setState(\r\n      {\r\n        date2: date,\r\n        pageSize: 3,\r\n        page: 1,\r\n        count: 0\r\n      },\r\n      () => {\r\n        this.retrieveInvoices();\r\n      }\r\n    );\r\n  }\r\n\r\n  cancelInvoice(e) {\r\n\r\n\r\n    const id = e.target.getAttribute('aid');\r\n    const arrIndx = e.target.getAttribute('arrindx');\r\n\r\n    const data = {\r\n      estate: \"cancelled\",\r\n    };\r\n\r\n    InvoiceDataService.update(id, data)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n        this.setState(state => {\r\n\r\n          // console.log(response.data);\r\n          // 1. Make a shallow copy of the items\r\n          let invoices = [...state.invoices];\r\n          // 2. Make a shallow copy of the item you want to mutate\r\n          // let item = {...invoices[arrIndx]};\r\n          // 3. Replace the property you're intested in\r\n          // item.name = 'newName';\r\n          // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n          invoices[arrIndx] = response.data;\r\n\r\n          // sustituir el appo. por el que llega del backend en vez de concat\r\n          // const invoices = state.invoices.concat(response.data);\r\n\r\n          return {\r\n            invoices,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n\r\n  payInvoice(e) {\r\n\r\n    const id = e.target.getAttribute('aid');\r\n    const arrIndx = e.target.getAttribute('arrindx');\r\n\r\n    const data = {\r\n      estate: \"payed\",\r\n    };\r\n\r\n    InvoiceDataService.update(id, data)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n        this.setState(state => {\r\n\r\n          let invoices = [...state.invoices];\r\n          invoices[arrIndx] = response.data;\r\n\r\n          return {\r\n            invoices,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n\r\n  sayHi() {\r\n    console.log('hi');\r\n  }\r\n  render() {\r\n\r\n    const {\r\n      searchSurname,\r\n      invoices,\r\n      date1,\r\n      date2,\r\n      page,\r\n      count,\r\n      pageSize,\r\n    } = this.state;\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"input-group mb-3\"  style={{ marginTop: '10px' }}>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Buscar por apellido\"\r\n                value={searchSurname}\r\n                onChange={this.onChangeSearchSurname}\r\n                onKeyPress={this.handleKeyPress}\r\n              />\r\n              <div className=\"input-group-append\">\r\n                <button\r\n                  className=\"btn btn-outline-secondary\"\r\n                  type=\"button\"\r\n                  onClick={this.retrieveInvoices}\r\n                >\r\n                  Buscar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n              <KeyboardDatePicker\r\n                margin=\"normal\"\r\n                id=\"date-picker-dialog-1\"\r\n                format=\"DD/MM/yyyy\"\r\n                value={date1}\r\n                onChange={this.setDate1}\r\n                cancelLabel=\"Cancelar\"\r\n                okLabel=\"Aceptar\"\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n              <KeyboardDatePicker\r\n                margin=\"normal\"\r\n                id=\"date-picker-dialog-2\"\r\n                format=\"DD/MM/yyyy\"\r\n                value={date2}\r\n                onChange={this.setDate2}\r\n                cancelLabel=\"Cancelar\"\r\n                okLabel=\"Aceptar\"\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </div>\r\n        </div>\r\n\r\n          { invoices && invoices.map((invoice, index) => {\r\n\r\n            return <div className=\"row\" key={index}>\r\n                      <div className=\"col-12\">\r\n                        <div className=\"card\" style={{ marginBottom: '10px' }} key={index}>\r\n                          <div className=\"card-header\">\r\n                            <div className=\"row\">\r\n                              <div className=\"col-8\">\r\n                                {invoice.inumber}/{moment(invoice.createdAt).format('YYYY')}&nbsp;&nbsp;&nbsp;{moment(invoice.date).format(\"DD-MM-YYYY\")}\r\n                              </div>\r\n                              <div className=\"col-4\">\r\n\r\n\r\n                                { invoice.estate === \"emitted\" ?\r\n\r\n                                <div className=\"d-flex justify-content-end\">\r\n\r\n                                  <DropdownButton\r\n                                    variant=\"secondary\"\r\n                                    size=\"sm\"\r\n                                    id=\"dropdown-basic-button\"\r\n                                    title=\"Acciones\">\r\n                                    <Dropdown.Item\r\n                                      href=\"\"\r\n                                      aid={invoice.id}\r\n                                      arrindx={index}\r\n                                      onClick={this.payInvoice}\r\n                                    >\r\n                                      Pagar\r\n                                    </Dropdown.Item>\r\n                                    <Dropdown.Item\r\n                                      href=\"\"\r\n                                      aid={invoice.id}\r\n                                      arrindx={index}\r\n                                      onClick={this.cancelInvoice}\r\n                                    >\r\n                                      Cancelar\r\n                                    </Dropdown.Item>\r\n                                  </DropdownButton>\r\n\r\n                                </div>\r\n                                : invoice.estate === \"payed\" ?\r\n                                  <div className=\"d-flex justify-content-end\">\r\n                                    <span className=\"badge badge-primary\">Pagada</span>\r\n                                  </div> :\r\n                                  <div className=\"d-flex justify-content-end\">\r\n                                    <span className=\"badge badge-danger\">Cancelada</span>\r\n                                  </div>\r\n                                }\r\n\r\n\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"card-body\">\r\n                            <h6 className=\"card-title\">\r\n                              {invoice.name.charAt(0).toUpperCase() + invoice.name.slice(1)}&nbsp;\r\n                              {invoice.surname.charAt(0).toUpperCase() + invoice.surname.slice(1)}\r\n                            </h6>\r\n                            <p className=\"card-text\">\r\n                              {invoice.address}&nbsp;-&nbsp;{invoice.city}\r\n                              <br/>\r\n                              {invoice.dni}\r\n                            </p>\r\n                            <div className=\"row\" style={{ borderRadius: '3px',background: '#F7F7F7', border: '1px solid lightgrey'}}>\r\n                              <div className=\"col-6\">\r\n                                <span>Concepto</span>\r\n                              </div>\r\n                              <div className=\"col-2\" style={{ paddingLeft: '0px',paddingRight: '0px'}}>\r\n                                Base\r\n                              </div>\r\n                              <div className=\"col-1\" style={{ paddingLeft: '0px',paddingRight: '0px'}}>\r\n                                <span>IVA</span>\r\n                              </div>\r\n                              <div className=\"col-3\">\r\n                                <span>Total</span>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                              <div className=\"col-6\">\r\n                                <span>{invoice.concept}</span>\r\n                              </div>\r\n                              <div className=\"col-2\" style={{ paddingLeft: '0px',paddingRight: '0px'}}>\r\n                                <span>{invoice.base}</span>\r\n                              </div>\r\n                              <div className=\"col-1\" style={{ paddingLeft: '0px',paddingRight: '0px'}}>\r\n                                <span>{invoice.iva}</span>\r\n                              </div>\r\n                              <div className=\"col-3\">\r\n                                <span>{invoice.total}</span>\r\n                              </div>\r\n                            </div>\r\n                            <hr/>\r\n                            <div className=\"row\">\r\n                              <div className=\"col-6\">\r\n                                <small>creada {moment(invoice.createdAt).fromNow()}</small>\r\n                              </div>\r\n                              <div className=\"col-6 d-flex justify-content-end\" style={{paddingTop: '3px'}}>\r\n                                <small>{invoice.emittedTo ? invoice.emittedTo._id : \"ficha eliminada\"}</small>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                  </div>\r\n\r\n            }\r\n          )}\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-12\" style={{ marginBottom: '10px' }}>\r\n              <div className=\"paging\">\r\n                <div>\r\n                  <span className=\"selectText\">{\"Refs por página: \"}</span>\r\n                  <select onChange={this.handlePageSizeChange} value={pageSize}>\r\n                    {this.pageSizes.map((size) => (\r\n                      <option key={size} value={size}>\r\n                        {size}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                <div>\r\n                  <div className=\"bbb\">\r\n                    <Pagination\r\n                      className=\"my-3\"\r\n                      count={count}\r\n                      page={page}\r\n                      siblingCount={1}\r\n                      boundaryCount={1}\r\n                      variant=\"outlined\"\r\n                      shape=\"rounded\"\r\n                      onChange={this.handlePageChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </>\r\n    );\r\n  }\r\n}","import http from \"../http-common\";\r\n\r\nclass ServiceDataService {\r\n  getAll(params) {\r\n    return http.get(\"/services\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/services/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/services\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/services/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/services/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/services`);\r\n  }\r\n\r\n  findBySurname(surname) {\r\n    return http.get(`/services?surname=${surname}`);\r\n  }\r\n\r\n  findObservations(id) {\r\n    return http.get(`/services/${id}/obs`);\r\n  }\r\n\r\n  deleteObservation(id, observation) {\r\n    return http.delete(`/services/${id}/obs?observation=${observation}`);\r\n  }\r\n\r\n  addObservation(id, data) {\r\n    return http.put(`/services/${id}/addob`, data);\r\n  }\r\n}\r\n\r\nexport default new ServiceDataService();\r\n","import React, { Component } from \"react\";\r\nimport InvoiceDataService from \"../services/invoice.service\";\r\nimport ServiceDataService from \"../services/service.service\";\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nexport default class AddVoice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeConcept = this.onChangeConcept.bind(this);\r\n    this.onChangeSessions = this.onChangeSessions.bind(this);\r\n    this.saveInvoice = this.saveInvoice.bind(this);\r\n    this.newInvoice = this.newInvoice.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      emittedTo: this.props.match.params.id,\r\n      concept: \"\",\r\n      sessions: 1,\r\n      services: [],\r\n      submitted: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.retrieveServices();\r\n  }\r\n  retrieveServices() {\r\n\r\n    ServiceDataService.getAll({})\r\n      .then((response) => {\r\n        // console.log(response);\r\n        const { data } = response.data;\r\n\r\n        // console.log(data);\r\n        console.log(data[0].id);\r\n        this.setState({\r\n          services: data,\r\n          concept: data[0].id\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n  onChangeConcept(e) {\r\n    // const id = e.target.getAttribute('aid');\r\n    // console.log(id);\r\n\r\n    // console.log(e.target);\r\n    // console.log(e.target.options[e.target.selectedIndex].dataset.serviceid);\r\n    console.log(e.target.options[e.target.selectedIndex].getAttribute('serviceid'));\r\n\r\n\r\n    this.setState({\r\n      concept: e.target.options[e.target.selectedIndex].getAttribute('serviceid'),\r\n    });\r\n  }\r\n  onChangeSessions(e) {\r\n    console.log(e.target.value)\r\n    this.setState({\r\n      sessions: e.target.value,\r\n    });\r\n  }\r\n  saveInvoice() {\r\n    var data = {\r\n      emittedTo: this.state.emittedTo,\r\n      concept: this.state.concept,\r\n      sessions: this.state.sessions\r\n    };\r\n\r\n\r\n    console.log(data);\r\n    InvoiceDataService.create(data)\r\n      .then((response) => {\r\n        this.setState({\r\n          submitted: true,\r\n        });\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newInvoice() {\r\n    this.setState((prevState) => ({\r\n      id: null,\r\n      emittedTo: this.props.match.params.id,\r\n      counter: prevState.counter,\r\n      sessions: 1,\r\n      submitted: false,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n\r\n    const { services, sessions } = this.state;\r\n\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-12\" style={{ marginTop: '10px'}}>\r\n          <div className=\"submit-form\">\r\n            {this.state.submitted ? (\r\n              <div>\r\n                <h4>Factura creada correctamente!</h4>\r\n                <button className=\"btn btn-success\" onClick={this.newInvoice}>\r\n                  Nueva\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <Form>\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                      <Form.Label>Concepto</Form.Label>\r\n                      <Form.Control as=\"select\" onChange={this.onChangeConcept}>\r\n\r\n                        { services && services.map((service, index) => {\r\n\r\n                          return <option key={index} serviceid={service.id} >{service.name}</option>\r\n\r\n                          }\r\n                        )}\r\n\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput1\" onChange={this.onChangeSessions}>\r\n                      <Form.Label>Sesiones</Form.Label>\r\n                      <Form.Control type=\"text\" defaultValue={sessions}/>\r\n                    </Form.Group>\r\n                  </Form>\r\n                </div>\r\n                <button style={{marginBottom: \"25px\"}} onClick={this.saveInvoice} className=\"btn btn-secondary\">\r\n                  Añadir\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {useState} from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport moment from \"moment\";\r\nimport MomentUtils from '@date-io/moment';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport 'moment/locale/es';\r\n\r\n\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nfunction SearchModal(props) {\r\n\r\n\tconst [date1, setDate1] = useState(moment());\r\n\tconst [date2, setDate2] = useState(moment());\r\n\tconst [filter, setFilter] = useState('emitted');\r\n\r\n\r\n\tfunction doFilter(e){\r\n    console.log(e.target.getAttribute('filter'));\r\n    setFilter(e.target.getAttribute('filter'));\r\n    // this.setState({\r\n    //   filter: e.target.getAttribute('filter'),\r\n    // });\r\n  }\r\n  function handleChange(event) {\r\n    // Here, we invoke the callback with the new value\r\n    // props.handleState(event.target.value);\r\n    props.handleState(filter);\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={props.handleShow}>\r\n        Filtrar\r\n      </Button>\r\n\r\n      <Modal show={props.show} onHide={props.handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n\t        <Container>\r\n\t          <Row>\r\n\t            <Col xs={6} md={4}>\r\n\t\t\t          <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n\t\t\t            <KeyboardDatePicker\r\n\t\t\t              margin=\"normal\"\r\n\t\t\t              id=\"date-picker-dialog-1\"\r\n\t\t\t              format=\"DD/MM/yyyy\"\r\n\t\t\t              value={date1}\r\n\t\t\t              onChange={setDate1}\r\n\t\t\t              cancelLabel=\"Cancelar\"\r\n\t\t\t              okLabel=\"Aceptar\"\r\n\t\t\t              KeyboardButtonProps={{\r\n\t\t\t                'aria-label': 'change date',\r\n\t\t\t              }}\r\n\t\t\t            />\r\n\t\t\t          </MuiPickersUtilsProvider>\r\n\t            </Col>\r\n\t            <Col xs={6} md={4}>\r\n\t\t\t          <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n\t\t\t            <KeyboardDatePicker\r\n\t\t\t              margin=\"normal\"\r\n\t\t\t              id=\"date-picker-dialog-2\"\r\n\t\t\t              format=\"DD/MM/yyyy\"\r\n\t\t\t              value={date2}\r\n\t\t\t              onChange={setDate2}\r\n\t\t\t              cancelLabel=\"Cancelar\"\r\n\t\t\t              okLabel=\"Aceptar\"\r\n\t\t\t              KeyboardButtonProps={{\r\n\t\t\t                'aria-label': 'change date',\r\n\t\t\t              }}\r\n\t\t\t            />\r\n\t\t\t          </MuiPickersUtilsProvider>\r\n\t            </Col>\r\n\t          </Row>\r\n\t          <Row>\r\n\t            <Col xs={12} md={8}>\r\n            <InputGroup>\r\n              <DropdownButton\r\n                as={InputGroup.Prepend}\r\n                variant=\"outline-secondary\"\r\n                title={filter}\r\n                id=\"input-group-dropdown-1\"\r\n              >\r\n                <Dropdown.Item href=\"#\" filter=\"emitted\" onClick={doFilter}>Emitidas</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\" filter=\"cancelled\" onClick={doFilter}>Canceladas</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\" filter=\"payed\" onClick={doFilter}>Pagadas</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\" filter=\"all\" onClick={doFilter}>Todas</Dropdown.Item>\r\n              </DropdownButton>\r\n              {/*<FormControl aria-describedby=\"basic-addon1\" value={this.state.filter} readOnly />*/}\r\n            </InputGroup>\r\n\t            </Col>\r\n\t          </Row>\r\n\r\n\t        </Container>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={props.handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleChange}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchModal;","import React, { Component } from \"react\";\r\nimport InvoiceDataService from \"../services/invoice.service\";\r\nimport moment from \"moment\";\r\nimport 'moment/locale/es';\r\nimport Card from 'react-bootstrap/Card';\r\nimport SearchModal from \"./search-modal-invoices.component\";\r\n\r\nmoment.locale(\"es\");\r\n\r\nexport default class InvoicesListByPatient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDateChange = this.handleDateChange.bind(this);\r\n    this.retrieveInvoices = this.retrieveInvoices.bind(this);\r\n    this.setFilter = this.setFilter.bind(this);\r\n    this.cancelInvoice = this.cancelInvoice.bind(this);\r\n    this.payInvoice = this.payInvoice.bind(this);\r\n    this.handleCloseModal = this.handleCloseModal.bind(this);\r\n    this.handleShowModal = this.handleShowModal.bind(this);\r\n    this.handleState = this.handleState.bind(this);\r\n\r\n    this.state = {\r\n      id: this.props.match.params.id,\r\n      // selectedDate: moment(\"01-01-2020\", \"DD-MM-YYYY\"),\r\n      filter: \"emitted\",\r\n      selectedDate: moment(),\r\n      invoices: [],\r\n      concept: \"Acupuntura\",\r\n      show: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(moment(\"01-01-2020\", \"DD-MM-YYYY\").format('DD-MM-YYYY'));\r\n    this.retrieveInvoices();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // https://medium.com/better-programming/when-to-use-callback-function-of-setstate-in-react-37fff67e5a6c\r\n    // if (this.state.currentMonth !== prevState.currentMonth) {\r\n    //   this.props.getCalendarData(this.state.currentMonth);\r\n    // }\r\n  }\r\n  retrieveInvoices() {\r\n    const { id } = this.state;\r\n\r\n    InvoiceDataService.findByPatientId(id)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        const { invoices } = response.data;\r\n\r\n        this.setState({\r\n          invoices: invoices,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  handleDateChange(date) {\r\n    // console.log(date);\r\n    this.setState({\r\n      selectedDate: date,\r\n    }, () => {\r\n     this.retrieveInvoices()\r\n    })\r\n  }\r\n\r\n  cancelInvoice(e) {\r\n\r\n  \tconst id = e.target.getAttribute('aid');\r\n  \tconst arrIndx = e.target.getAttribute('arrindx');\r\n\r\n    const data = {\r\n      estate: \"cancelled\",\r\n    };\r\n\r\n    InvoiceDataService.update(id, data)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n        this.setState(state => {\r\n\r\n        \t// console.log(response.data);\r\n\t\t\t    // 1. Make a shallow copy of the items\r\n\t\t\t    let invoices = [...state.invoices];\r\n\t\t\t    // 2. Make a shallow copy of the item you want to mutate\r\n\t\t\t    // let item = {...invoices[arrIndx]};\r\n\t\t\t    // 3. Replace the property you're intested in\r\n\t\t\t    // item.name = 'newName';\r\n\t\t\t    // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n\t\t\t    invoices[arrIndx] = response.data;\r\n\r\n        \t// sustituir el appo. por el que llega del backend en vez de concat\r\n          // const invoices = state.invoices.concat(response.data);\r\n\r\n          return {\r\n            invoices,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n\r\n  payInvoice(e) {\r\n\r\n    const id = e.target.getAttribute('aid');\r\n    const arrIndx = e.target.getAttribute('arrindx');\r\n\r\n    const data = {\r\n      estate: \"payed\",\r\n    };\r\n\r\n    InvoiceDataService.update(id, data)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n        this.setState(state => {\r\n\r\n          let invoices = [...state.invoices];\r\n          invoices[arrIndx] = response.data;\r\n\r\n          return {\r\n            invoices,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n  setFilter(e) {\r\n    // console.log(e.target.getAttribute('filter'));\r\n    this.setState({\r\n      filter: e.target.getAttribute('filter'),\r\n    });\r\n  }\r\n\r\n  handleState(filter) {\r\n    // console.log(filter);\r\n    this.setState({\r\n      show: false,\r\n      filter: filter,\r\n    });\r\n  }\r\n  handleCloseModal() {\r\n    this.setState({\r\n      show: false,\r\n    });\r\n  }\r\n\r\n  handleShowModal() {\r\n    this.setState({\r\n      show: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      invoices,\r\n      filter,\r\n      show,\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          { invoices && invoices.filter(invoice => filter === 'all' ? true : invoice.estate === filter).map((invoice, index) => {\r\n\r\n            return <Card style={{ marginBottom: '10px'/*width: '18rem'*/ }} key={index}>\r\n              <Card.Body>\r\n                <Card.Title>{invoice.concept}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">\r\n                \t{moment(invoice.date).format(\"DD-MM-YYYY\")}\r\n                \t</Card.Subtitle>\r\n                <Card.Text>\r\n                \t{/*{this.props.match.params.id}*/}\r\n                \t{invoice.emittedTo.name}&nbsp;{invoice.emittedTo.surname}<br/>\r\n                \t<small>creada {moment(invoice.createdAt).fromNow()}</small><br/>\r\n                </Card.Text>\r\n                { invoice.estate === \"emitted\" ? <div>\r\n                <Card.Link href=\"#\" aid={invoice.id} arrindx={index} onClick={this.cancelInvoice}>Cancelar</Card.Link>\r\n                <Card.Link href=\"#\" aid={invoice.id} arrindx={index} onClick={this.payInvoice}>Pagar</Card.Link>\r\n                </div>\r\n                : invoice.estate === \"payed\" ? <span className=\"badge badge-success\">Pagada</span> :\r\n                <span className=\"badge badge-warning\">Cancelada</span>\r\n                }\r\n              </Card.Body>\r\n            </Card>\r\n\r\n            }\r\n          )}\r\n          <p>&nbsp;</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div style={{ /*width: '18rem'*/ }} className=\"col-12\">\r\n          <div className=\"d-flex justify-content-center\">\r\n            <SearchModal show={show} handleClose={this.handleCloseModal} handleShow={this.handleShowModal} handleState={this.handleState}/>\r\n          </div>\r\n          <p>&nbsp;</p>\r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PatientDataService from \"../services/patient.service\";\r\nimport moment from \"moment\";\r\nimport 'moment/locale/es';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\n\r\nmoment.locale(\"es\");\r\n\r\nexport default class ObservationsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.retrieveObservations = this.retrieveObservations.bind(this);\r\n    this.deleteObservation = this.deleteObservation.bind(this);\r\n    this.sortObs = this.sortObs.bind(this);\r\n    this.sortObsInv = this.sortObsInv.bind(this);\r\n\r\n    this.state = {\r\n      id: this.props.match.params.id,\r\n      observations: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveObservations();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n  }\r\n  retrieveObservations() {\r\n    const { id } = this.state;\r\n\r\n    console.log(\"ID del param es: \" + id);\r\n\r\n    PatientDataService.findObservations(id)\r\n      .then((response) => {\r\n        console.log(response);\r\n\r\n        let sortedArray = response.data.sort(function(a,b){\r\n          // Turn your strings into dates, and then subtract them\r\n          // to get a value that is either negative, positive, or zero.\r\n          return new Date(b.createdAt) - new Date(a.createdAt);\r\n        });\r\n\r\n        this.setState({\r\n          observations: sortedArray,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n// array.sort(function(a,b){\r\n//   // Turn your strings into dates, and then subtract them\r\n//   // to get a value that is either negative, positive, or zero.\r\n//   return new Date(b.date) - new Date(a.date);\r\n// });\r\n  deleteObservation(e) {\r\n\r\n  \tconst observationID = e.target.getAttribute('aid');\r\n  \t// const arrIndx = e.target.getAttribute('arrindx');\r\n\r\n    PatientDataService.deleteObservation(this.state.id, observationID)\r\n      .then((response) => {\r\n\r\n        const newObservations = this.state.observations;\r\n\r\n        const newArray = newObservations.filter(o => o.id !== response.data.observation);\r\n\r\n        console.log(newArray);\r\n\r\n        this.setState({\r\n          observations: newArray\r\n        });\r\n\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n\r\n  sortObs() {\r\n    // console.log(\"--------------------\");\r\n    // console.log(this.state.observations);\r\n    // console.log(\"--------------------\");\r\n    // console.log(this.state.observations.sort(function(a,b){\r\n    //   // Turn your strings into dates, and then subtract them\r\n    //   // to get a value that is either negative, positive, or zero.\r\n    //   return new Date(b.createdAt) - new Date(a.createdAt);\r\n    // }));\r\n\r\n    let sortedArray = this.state.observations.sort(function(a,b){\r\n      // Turn your strings into dates, and then subtract them\r\n      // to get a value that is either negative, positive, or zero.\r\n      return new Date(b.createdAt) - new Date(a.createdAt);\r\n    });\r\n\r\n    this.setState({\r\n      observations: sortedArray\r\n    });\r\n\r\n\r\n  }\r\n\r\n  sortObsInv() {\r\n    // console.log(\"--------------------\");\r\n    // console.log(this.state.observations);\r\n    // console.log(\"--------------------\");\r\n    // console.log(this.state.observations.sort(function(a,b){\r\n    //   // Turn your strings into dates, and then subtract them\r\n    //   // to get a value that is either negative, positive, or zero.\r\n    //   return new Date(b.createdAt) - new Date(a.createdAt);\r\n    // }));\r\n\r\n\r\n    let sortedArray = this.state.observations.sort(function(a,b){\r\n      // Turn your strings into dates, and then subtract them\r\n      // to get a value that is either negative, positive, or zero.\r\n      return new Date(a.createdAt) - new Date(b.createdAt);\r\n    });\r\n\r\n    this.setState({\r\n      observations: sortedArray\r\n    });\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      id,\r\n      observations\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n      <div className=\"row\" style={{ marginTop: '10px' }}>\r\n        <div className=\"col-6\" style={{ marginBottom: '10px'/*width: '18rem'*/ }}>\r\n          <Button href={`/patients/${id}/obs/new`} variant=\"secondary\">Nueva</Button>\r\n        </div>\r\n        <div className=\"col-6\" style={{ marginBottom: '10px',display: 'flex',justifyContent: 'flex-end'/*width: '18rem'*/ }}>\r\n          <div>\r\n            {[DropdownButton].map((DropdownType, idx) => (\r\n              <DropdownType\r\n                as={ButtonGroup}\r\n                key={idx}\r\n                id={`dropdown-button-drop-${idx}`}\r\n                variant=\"secondary\"\r\n                title=\"Ordernar\"\r\n              >\r\n                <Dropdown.Item eventKey=\"1\" onClick={this.sortObs}>Recientes</Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item eventKey=\"2\" onClick={this.sortObsInv}>Antiguos</Dropdown.Item>\r\n              </DropdownType>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          { observations && observations.map((observation, index) => {\r\n\r\n            return <Card style={{ marginBottom: '10px'/*width: '18rem'*/ }} key={index}>\r\n              <Card.Body>\r\n                <Card.Title>{moment(observation.createdAt).format(\"DD/MM/YYYY - hh:mm:ss\")}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\"></Card.Subtitle>\r\n                <Card.Text>\r\n                \t{observation.note}<br/>\r\n                </Card.Text>\r\n                <Card.Link href=\"#\" aid={observation.id} arrindx={index} onClick={this.deleteObservation}>Borrar</Card.Link>\r\n              </Card.Body>\r\n            </Card>\r\n\r\n            }\r\n          )}\r\n          <p>&nbsp;</p>\r\n        </div>\r\n      </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PatientDataService from \"../services/patient.service\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default class AddPatient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeNote = this.onChangeNote.bind(this);\r\n    this.addObservation = this.addObservation.bind(this);\r\n\r\n    this.state = {\r\n      id: this.props.match.params.id,\r\n      note: \"\",\r\n      success: false\r\n    };\r\n  }\r\n\r\n  onChangeNote(e) {\r\n    this.setState({\r\n      note: e.target.value,\r\n    });\r\n  }\r\n\r\n  addObservation() {\r\n    var data = {\r\n      note: this.state.note\r\n    };\r\n\r\n    PatientDataService.addObservation(this.state.id, data)\r\n      .then((response) => {\r\n        this.setState({\r\n          success: true\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return this.state.success ? <Redirect to={`/patients/${this.state.id}/obs`} /> : (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>Añadido correctamente!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newPatient}>\r\n              Nuevo\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"note\">Note</label>\r\n              <textarea\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"note\"\r\n                required\r\n                value={this.state.note}\r\n                onChange={this.onChangeNote}\r\n                name=\"note\"\r\n                rows=\"10\"\r\n              >\r\n              </textarea>\r\n            </div>\r\n\r\n            <button style={{marginBottom: \"25px\"}} onClick={this.addObservation} className=\"btn btn-secondary\">\r\n              Guardar\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ServiceDataService from \"../services/service.service\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default class ServicesList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.retrieveServices = this.retrieveServices.bind(this);\r\n\r\n    this.state = {\r\n      services: [],\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveServices();\r\n  }\r\n\r\n  retrieveServices() {\r\n\r\n    ServiceDataService.getAll({})\r\n      .then((response) => {\r\n        const { data } = response.data;\r\n\r\n        console.log(data);\r\n        // console.log(response.data.data);\r\n\r\n        this.setState({\r\n          services: data\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      services,\r\n    } = this.state;\r\n\r\n    return (\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-12\" style={{ marginTop: '10px'}}>\r\n\r\n              { services && services.map((service, index) => {\r\n\r\n                return <div className=\"row\"  key={index}>\r\n                        <div className=\"col-12\">\r\n                          <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                              <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                  <p>Servicio: {service.name}</p>\r\n                                  <p>IVA: {service.iva}</p>\r\n                                  <p>Coste: {service.cost}</p>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                  <Button variant=\"secondary\" href={\"/services/\" + service.id}>Modificar</Button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                       </div>\r\n                }\r\n\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport ServiceDataService from \"../services/service.service\";\r\n\r\nexport default class AddService extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeIVA = this.onChangeIVA.bind(this);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.createService = this.createService.bind(this);\r\n    this.newService = this.newService.bind(this);\r\n    this.onChangeCost = this.onChangeCost.bind(this);\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      iva: 0,\r\n      cost: 0,\r\n      submitted: false,\r\n    };\r\n  }\r\n\r\n  onChangeIVA(e) {\r\n    this.setState({\r\n      iva: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeCost(e) {\r\n    this.setState({\r\n      cost: e.target.value,\r\n    });\r\n  }\r\n\r\n  createService() {\r\n    var data = {\r\n      iva: this.state.iva,\r\n      name: this.state.name,\r\n      cost: this.state.cost\r\n    };\r\n\r\n    ServiceDataService.create(data)\r\n      .then((response) => {\r\n        this.setState({\r\n          submitted: true\r\n        });\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newService() {\r\n    this.setState({\r\n      name: \"\",\r\n      iva: 0,\r\n      cost: 0,\r\n      submitted: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-12\" style={{ marginTop: '10px'}}>\r\n          <div className=\"submit-form\">\r\n            {this.state.submitted ? (\r\n              <div>\r\n                <h4>Servicio añadido correctamente!</h4>\r\n                <button className=\"btn btn-success\" onClick={this.newService}>\r\n                  Nuevo\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"title\">Service</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"name\"\r\n                    required\r\n                    value={this.state.name}\r\n                    onChange={this.onChangeName}\r\n                    name=\"name\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"iva\">IVA</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"iva\"\r\n                    required\r\n                    value={this.state.iva}\r\n                    onChange={this.onChangeIVA}\r\n                    name=\"iva\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"cost\">Coste</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"cost\"\r\n                    required\r\n                    value={this.state.cost}\r\n                    onChange={this.onChangeCost}\r\n                    name=\"cost\"\r\n                  />\r\n                </div>\r\n\r\n\r\n                <button style={{marginBottom: \"25px\"}} onClick={this.createService} className=\"btn btn-secondary\">\r\n                  Añadir\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ServiceDataService from \"../services/service.service\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default class AddService extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeIVA = this.onChangeIVA.bind(this);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeCost = this.onChangeCost.bind(this);\r\n    this.updateService = this.updateService.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      name: \"\",\r\n      iva: 0,\r\n      cost: 0,\r\n      submitted: false,\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.getService(this.props.match.params.id);\r\n  }\r\n\r\n  getService(id) {\r\n    ServiceDataService.get(id)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          iva: response.data.iva,\r\n          cost: response.data.cost\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  onChangeIVA(e) {\r\n    this.setState({\r\n      iva: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeCost(e) {\r\n    this.setState({\r\n      cost: e.target.value,\r\n    });\r\n  }\r\n\r\n  updateService() {\r\n    var data = {\r\n      iva: this.state.iva,\r\n      name: this.state.name,\r\n      cost: this.state.cost\r\n    };\r\n\r\n    ServiceDataService.update(this.state.id,data)\r\n      .then((response) => {\r\n        this.setState({\r\n          submitted: true\r\n        });\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\" style={{ marginTop: '10px'}}>\r\n        <div className=\"col-12\">\r\n          <div className=\"submit-form\">\r\n            {this.state.submitted ? <Redirect to={`/services`} /> : (\r\n              <div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"title\">Servicio</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"name\"\r\n                    required\r\n                    value={this.state.name}\r\n                    onChange={this.onChangeName}\r\n                    name=\"name\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"iva\">IVA</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"iva\"\r\n                    required\r\n                    value={this.state.iva}\r\n                    onChange={this.onChangeIVA}\r\n                    name=\"iva\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"cost\">Coste</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"cost\"\r\n                    required\r\n                    value={this.state.cost}\r\n                    onChange={this.onChangeCost}\r\n                    name=\"cost\"\r\n                  />\r\n                </div>\r\n\r\n                <button style={{marginBottom: \"25px\"}} onClick={this.updateService} className=\"btn btn-secondary\">\r\n                  Actualizar\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AddPatient from \"./components/add-patient.component\";\nimport Patient from \"./components/patient.component\";\nimport PatientsList from \"./components/patients-list.component\";\nimport AppointmentsList from \"./components/appointments-list.component\";\nimport AddAppointment from \"./components/add-appointment.component\";\n// import Appointment from \"./components/appointment.component\";\nimport AppointmentsListByPatient from \"./components/appointments-list-by-patient.component\";\n\nimport InvoicesList from \"./components/invoices-list.component\";\nimport AddInvoice from \"./components/add-invoice.component\";\nimport InvoicesListByPatient from \"./components/invoices-list-by-patient.component\";\n\nimport ObservationsList from \"./components/observations-list-by-patient.component\";\nimport AddObservation from \"./components/add-observation.component\";\n\nimport ServicesList from \"./components/services-list.component\";\nimport AddService from \"./components/add-service.component\";\nimport Service from \"./components/service.component\";\n\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n\n        <div>\n        {/*\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n            <a href=\"/patients\" className=\"navbar-brand\">\n              Centro Otomo\n            </a>\n            <div className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/patients\"} className=\"nav-link\">\n                  Pacientes\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to={\"/add\"} className=\"nav-link\">\n                  Nuevo\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to={\"/appointments\"} className=\"nav-link\">\n                  Citas\n                </Link>\n              </li>\n            </div>\n          </nav>\n        */}\n              <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"/patients\">Otomo</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                  <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"/appointments\">Citas</Nav.Link>\n                    <NavDropdown alignRight title=\"Pacientes\" id=\"basic-nav-dropdown\">\n                      <NavDropdown.Item href=\"/patients\">Buscar</NavDropdown.Item>\n                      <NavDropdown.Divider />\n                      <NavDropdown.Item href=\"/add\">Nuevo</NavDropdown.Item>\n                    </NavDropdown>\n                    <NavDropdown alignRight title=\"Facturas\" id=\"basic-nav-dropdown\">\n                      <NavDropdown.Item href=\"/invoices\">Facturas</NavDropdown.Item>\n                      <NavDropdown.Divider />\n                      <NavDropdown.Item href=\"/services\">Servicios</NavDropdown.Item>\n                      <NavDropdown.Item href=\"/addservice\">Nuevo Servicio</NavDropdown.Item>\n                    </NavDropdown>\n                  </Nav>\n                </Navbar.Collapse>\n              </Navbar>\n\n          <div className=\"container\">\n            <Switch>\n              <Route\n                exact\n                path={[\"/\", \"/patients\"]}\n                component={PatientsList}\n              />\n              <Route\n                exact\n                path={[\"/\", \"/patients/appoint/:id\"]}\n                component={PatientsList}\n              />\n              <Route exact path=\"/add\" component={AddPatient} />\n              <Route exact path=\"/patients/:id\" component={Patient} />\n              <Route exact path=\"/patients/:id/obs\" component={ObservationsList} />\n              <Route path=\"/patients/:id/obs/new\" component={AddObservation} />\n              <Route\n                exact\n                path={[\"/\", \"/appointments\"]}\n                component={AppointmentsList}\n              />\n              <Route\n                exact\n                path={[\"/\", \"/appointments/after/:selected\"]}\n                component={AppointmentsList}\n              />\n              <Route exact path=\"/addappointment/:id\" component={AddAppointment} />\n              {/*<Route path=\"/appointments/:id\" component={Appointment} />*/}\n              <Route path=\"/appointments/patient/:id\" component={AppointmentsListByPatient} />\n              <Route\n                exact\n                path={[\"/\", \"/invoices\"]}\n                component={InvoicesList}\n              />\n              <Route exact path=\"/addinvoice/:id\" component={AddInvoice} />\n              <Route path=\"/invoices/patient/:id\" component={InvoicesListByPatient} />\n              <Route\n                exact\n                path={[\"/\", \"/services\"]}\n                component={ServicesList}\n              />\n              <Route exact path=\"/addservice\" component={AddService} />\n              <Route exact path=\"/services/:id\" component={Service} />\n              {/*\n              */}\n            </Switch>\n          </div>\n        </div>\n\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// import the library\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\n\r\n// import your icons\r\n// import { coffee } from '@fortawesome/free-regular-svg-icons';\r\n// import { faCoffee } from '@fortawesome/free-regular-svg-icons';\r\nimport { faCoffee, faCalendarTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(\r\n  faCoffee,\r\n  faCalendarTimes\r\n);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// import your fontawesome library\nimport './fontawesome';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}